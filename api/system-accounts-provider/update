#!/usr/bin/perl

#
# Copyright (C) 2018 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use esmith::ConfigDB;

require '/usr/libexec/nethserver/api/lib/helper_functions.pl';

my $input = readInput();

my $cmd = $input->{'action'} || 'fetchbase';

if ($cmd eq 'localldap') {

    my $output = `/usr/libexec/nethserver/pkgaction --install \@nethserver-directory 2>&1`;
    if ($? > 0) {
        error("EventFailed", $output);
    } else {
        success();
    }

} elsif ($cmd eq 'removeprovider') {

    my $ret = system("/sbin/e-smith/signal-event -j nethserver-sssd-remove-provider");
    exit($ret>>8);

} elsif ($cmd eq 'remoteldap') {

    my $db = esmith::ConfigDB->open();
    $db->set_prop('sssd', 'LdapURI', $input->{'LdapURI'});
    $db->set_prop('sssd', 'BindDN', $input->{'BindDN'});
    $db->set_prop('sssd', 'BindPassword', $input->{'BindPassword'});
    $db->set_prop('sssd', 'BaseDN', $input->{'BaseDN'});
    $db->set_prop('sssd', 'UserDN', $input->{'UserDN'});
    $db->set_prop('sssd', 'GroupDN', $input->{'GroupDN'});
    $db->set_prop('sssd', 'StartTls', $input->{'StartTls'});
    $db->set_prop('sssd', 'Provider', 'ldap');
    $db->set_prop('sssd', 'status', 'enabled');

    my $ret = system("/sbin/e-smith/signal-event -j nethserver-sssd-save");
    exit($ret>>8);

}  
