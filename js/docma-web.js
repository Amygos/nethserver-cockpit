/*! dustjs-linkedin - v2.7.2
* http://dustjs.com/
* Copyright (c) 2015 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define("dust.core",[],b):"object"==typeof exports?module.exports=b():a.dust=b()}(this,function(){function getTemplate(a,b){return a?"function"==typeof a&&a.template?a.template:dust.isTemplateFn(a)?a:b!==!1?dust.cache[a]:void 0:void 0}function load(a,b,c){if(!a)return b.setError(new Error("No template or template name provided to render"));var d=getTemplate(a,dust.config.cache);return d?d(b,Context.wrap(c,d.templateName)):dust.onLoad?b.map(function(b){function d(a,d){var f;if(a)return b.setError(a);if(f=getTemplate(d,!1)||getTemplate(e,dust.config.cache),!f){if(!dust.compile)return b.setError(new Error("Dust compiler not available"));f=dust.loadSource(dust.compile(d,e))}f(b,Context.wrap(c,f.templateName)).end()}var e=a;3===dust.onLoad.length?dust.onLoad(e,c.options,d):dust.onLoad(e,d)}):b.setError(new Error("Template Not Found: "+a))}function Context(a,b,c,d,e){void 0===a||a instanceof Stack||(a=new Stack(a)),this.stack=a,this.global=b,this.options=c,this.blocks=d,this.templateName=e}function getWithResolvedData(a,b,c){return function(d){return a.push(d)._get(b,c)}}function Stack(a,b,c,d){this.tail=b,this.isObject=a&&"object"==typeof a,this.head=a,this.index=c,this.of=d}function Stub(a){this.head=new Chunk(this),this.callback=a,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(a,b,c){this.root=a,this.next=b,this.data=[],this.flushable=!1,this.taps=c}function Tap(a,b){this.head=a,this.tail=b}var dust={version:"2.7.2"},NONE="NONE",ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){};dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},function(){var a,b,c={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4};"undefined"!=typeof console&&console.log?(a=console.log,b="function"==typeof a?function(){a.apply(console,arguments)}:function(){a(Array.prototype.slice.apply(arguments).join(" "))}):b=EMPTY_FUNC,dust.log=function(a,d){d=d||INFO,c[d]>=c[dust.debugLevel]&&b("[DUST:"+d+"]",a)},dust.debugLevel=NONE,"undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG)}(),dust.helpers={},dust.cache={},dust.register=function(a,b){a&&(b.templateName=a,dust.config.cache!==!1&&(dust.cache[a]=b))},dust.render=function(a,b,c){var d=new Stub(c).head;try{load(a,d,b).end()}catch(e){d.setError(e)}},dust.stream=function(a,b){var c=new Stream,d=c.head;return dust.nextTick(function(){try{load(a,d,b).end()}catch(c){d.setError(c)}}),c},dust.loadSource=function(source){return eval(source)},dust.isArray=Array.isArray?Array.isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},dust.nextTick=function(){return function(a){setTimeout(a,0)}}(),dust.isEmpty=function(a){return 0===a?!1:dust.isArray(a)&&!a.length?!0:!a},dust.isEmptyObject=function(a){var b;if(null===a)return!1;if(void 0===a)return!1;if(a.length>0)return!1;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b))return!1;return!0},dust.isTemplateFn=function(a){return"function"==typeof a&&a.__dustBody},dust.isThenable=function(a){return a&&"object"==typeof a&&"function"==typeof a.then},dust.isStreamable=function(a){return a&&"function"==typeof a.on&&"function"==typeof a.pipe},dust.filter=function(a,b,c,d){var e,f,g,h;if(c)for(e=0,f=c.length;f>e;e++)g=c[e],g.length&&(h=dust.filters[g],"s"===g?b=null:"function"==typeof h?a=h(a,d):dust.log("Invalid filter `"+g+"`",WARN));return b&&(a=dust.filters[b](a,d)),a},dust.filters={h:function(a){return dust.escapeHtml(a)},j:function(a){return dust.escapeJs(a)},u:encodeURI,uc:encodeURIComponent,js:function(a){return dust.escapeJSON(a)},jp:function(a){return JSON?JSON.parse(a):(dust.log("JSON is undefined; could not parse `"+a+"`",WARN),a)}},dust.makeBase=dust.context=function(a,b){return new Context(void 0,a,b)},Context.wrap=function(a,b){return a instanceof Context?a:new Context(a,{},{},null,b)},Context.prototype.get=function(a,b){return"string"==typeof a&&("."===a[0]&&(b=!0,a=a.substr(1)),a=a.split(".")),this._get(b,a)},Context.prototype._get=function(a,b){var c,d,e,f,g,h=this.stack||{},i=1;if(d=b[0],e=b.length,a&&0===e)f=h,h=h.head;else{if(a)h&&(h=h.head?h.head[d]:void 0);else{for(;h&&(!h.isObject||(f=h.head,c=h.head[d],void 0===c));)h=h.tail;h=void 0!==c?c:this.global&&this.global[d]}for(;h&&e>i;){if(dust.isThenable(h))return h.then(getWithResolvedData(this,a,b.slice(i)));f=h,h=h[b[i]],i++}}return"function"==typeof h?(g=function(){try{return h.apply(f,arguments)}catch(a){throw dust.log(a,ERROR),a}},g.__dustBody=!!h.__dustBody,g):(void 0===h&&dust.log("Cannot find reference `{"+b.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),h)},Context.prototype.getPath=function(a,b){return this._get(a,b)},Context.prototype.push=function(a,b,c){return void 0===a?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(a,this.stack,b,c))},Context.prototype.pop=function(){var a=this.current();return this.stack=this.stack&&this.stack.tail,a},Context.prototype.rebase=function(a){return new Context(a,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var a=this.rebase();return a.stack=this.stack,a},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(a){var b,c,d;if("function"==typeof a&&(a=a(new Chunk,this).data.join("")),b=this.blocks,!b)return dust.log("No blocks for context `"+a+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(c=b.length;c--;)if(d=b[c][a])return d;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(a){var b,c=this.blocks;return a?(b=c?c.concat([a]):[a],new Context(this.stack,this.global,this.options,b,this.getTemplateName())):this},Context.prototype.resolve=function(a){var b;return"function"!=typeof a?a:(b=(new Chunk).render(a,this),b instanceof Chunk?b.data.join(""):b)},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.callback(a.error),dust.log("Rendering failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=a.data.join(""),a=a.next,this.head=a}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.emit("error",a.error),this.emit("end"),dust.log("Streaming failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",a.data.join("")),a=a.next,this.head=a}this.emit("end")},Stream.prototype.emit=function(a,b){var c,d,e=this.events||{},f=e[a]||[];if(!f.length)return dust.log("Stream broadcasting, but no listeners for `"+a+"`",DEBUG),!1;for(f=f.slice(0),c=0,d=f.length;d>c;c++)f[c](b);return!0},Stream.prototype.on=function(a,b){var c=this.events=this.events||{},d=c[a]=c[a]||[];return"function"!=typeof b?dust.log("No callback function provided for `"+a+"` event listener",WARN):d.push(b),this},Stream.prototype.pipe=function(a){if("function"!=typeof a.write||"function"!=typeof a.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var b=!1;return"function"==typeof a.emit&&a.emit("pipe",this),"function"==typeof a.on&&a.on("error",function(){b=!0}),this.on("data",function(c){if(!b)try{a.write(c,"utf8")}catch(d){dust.log(d,ERROR)}}).on("end",function(){if(!b)try{a.end(),b=!0}catch(c){dust.log(c,ERROR)}})},Chunk.prototype.write=function(a){var b=this.taps;return b&&(a=b.go(a)),this.data.push(a),this},Chunk.prototype.end=function(a){return a&&this.write(a),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(a){var b=new Chunk(this.root,this.next,this.taps),c=new Chunk(this.root,b,this.taps);this.next=c,this.flushable=!0;try{a(c)}catch(d){dust.log(d,ERROR),c.setError(d)}return b},Chunk.prototype.tap=function(a){var b=this.taps;return this.taps=b?b.push(a):new Tap(a),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(a,b){return a(this,b)},Chunk.prototype.reference=function(a,b,c,d){return"function"==typeof a?(a=a.apply(b.current(),[this,b,null,{auto:c,filters:d}]),a instanceof Chunk?a:this.reference(a,b,c,d)):dust.isThenable(a)?this.await(a,b,null,c,d):dust.isStreamable(a)?this.stream(a,b,null,c,d):dust.isEmpty(a)?this:this.write(dust.filter(a,c,d,b))},Chunk.prototype.section=function(a,b,c,d){var e,f,g,h=c.block,i=c["else"],j=this;if("function"==typeof a&&!dust.isTemplateFn(a)){try{a=a.apply(b.current(),[this,b,c,d])}catch(k){return dust.log(k,ERROR),this.setError(k)}if(a instanceof Chunk)return a}if(dust.isEmptyObject(c))return j;if(dust.isEmptyObject(d)||(b=b.push(d)),dust.isArray(a)){if(h){if(f=a.length,f>0){for(g=b.stack&&b.stack.head||{},g.$len=f,e=0;f>e;e++)g.$idx=e,j=h(j,b.push(a[e],e,f));return g.$idx=void 0,g.$len=void 0,j}if(i)return i(this,b)}}else{if(dust.isThenable(a))return this.await(a,b,c);if(dust.isStreamable(a))return this.stream(a,b,c);if(a===!0){if(h)return h(this,b)}else if(a||0===a){if(h)return h(this,b.push(a))}else if(i)return i(this,b)}return dust.log("Section without corresponding key in template `"+b.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(e)return e(this,b)}else{if(d)return d(this,b);dust.log("No block for exists check in template `"+b.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(d)return d(this,b);dust.log("No block for not-exists check in template `"+b.getTemplateName()+"`",DEBUG)}else if(e)return e(this,b);return this},Chunk.prototype.block=function(a,b,c){var d=a||c.block;return d?d(this,b):this},Chunk.prototype.partial=function(a,b,c,d){var e;return void 0===d&&(d=c,c=b),dust.isEmptyObject(d)||(c=c.clone(),e=c.pop(),c=c.push(d).push(e)),dust.isTemplateFn(a)?this.capture(a,b,function(a,b){c.templateName=a,load(a,b,c).end()}):(c.templateName=a,load(a,this,c))},Chunk.prototype.helper=function(a,b,c,d,e){var f,g=this,h=d.filters;if(void 0===e&&(e="h"),!dust.helpers[a])return dust.log("Helper `"+a+"` does not exist",WARN),g;try{return f=dust.helpers[a](g,b,c,d),f instanceof Chunk?f:("string"==typeof h&&(h=h.split("|")),dust.isEmptyObject(c)?g.reference(f,b,e,h):g.section(f,b,c,d))}catch(i){return dust.log("Error in helper `"+a+"`: "+i.message,ERROR),g.setError(i)}},Chunk.prototype.await=function(a,b,c,d,e){return this.map(function(f){a.then(function(a){f=c?f.section(a,b,c):f.reference(a,b,d,e),f.end()},function(a){var d=c&&c.error;d?f.render(d,b.push(a)).end():(dust.log("Unhandled promise rejection in `"+b.getTemplateName()+"`",INFO),f.end())})})},Chunk.prototype.stream=function(a,b,c,d,e){var f=c&&c.block,g=c&&c.error;return this.map(function(h){var i=!1;a.on("data",function(a){i||(f?h=h.map(function(c){c.render(f,b.push(a)).end()}):c||(h=h.reference(a,b,d,e)))}).on("error",function(a){i||(g?h.render(g,b.push(a)):dust.log("Unhandled stream error in `"+b.getTemplateName()+"`",INFO),i||(i=!0,h.end()))}).on("end",function(){i||(i=!0,h.end())})})},Chunk.prototype.capture=function(a,b,c){return this.map(function(d){var e=new Stub(function(a,b){a?d.setError(a):c(b,d)});a(e.head,b).end()})},Chunk.prototype.setError=function(a){return this.error=a,this.root.flush(),this};for(var f in Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);Tap.prototype.push=function(a){return new Tap(a,this)},Tap.prototype.go=function(a){for(var b=this;b;)a=b.head(a),b=b.tail;return a};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(a){return"string"==typeof a||a&&"function"==typeof a.toString?("string"!=typeof a&&(a=a.toString()),HCHARS.test(a)?a.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):a):a};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(a){return"string"==typeof a?a.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):a},dust.escapeJSON=function(a){return JSON?JSON.stringify(a).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+a+"`",WARN),a)},dust}),"function"==typeof define&&define.amd&&define.amd.dust===!0&&define(["require","dust.core"],function(require,dust){return dust.onLoad=function(a,b){require([a],function(){b()})},dust});
/*! dustjs-helpers - v1.7.3
* http://dustjs.com/
* Copyright (c) 2015 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define(["dust.core"],b):"object"==typeof exports?module.exports=b(require("dustjs-linkedin")):b(a.dust)}(this,function(dust){function a(a,b,c){c=c||"INFO",a=a?"{@"+a+"}: ":"",dust.log(a+b,c)}function b(b){k[b]||(a(b,"Deprecation warning: "+b+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),a(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+b.replace(/\W+/g,""),"WARN"),k[b]=!0)}function c(a){return a.stack.tail&&a.stack.tail.head&&"undefined"!=typeof a.stack.tail.head.__select__}function d(a){return c(a)&&a.get("__select__")}function e(a,b){var c,d=a.stack.head,e=a.rebase();a.stack&&a.stack.tail&&(e.stack=a.stack.tail);var f={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(c in b)f[c]=b[c];return e.push({__select__:f}).push(d,a.stack.index,a.stack.of)}function f(a){var b,c;if(a.isDeferredPending=!0,a.deferreds.length)for(a.isDeferredComplete=!0,b=0,c=a.deferreds.length;c>b;b++)a.deferreds[b]();a.isDeferredPending=!1}function g(a,b){return"function"==typeof b?b.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):b}function h(a,b){return function(c,d,e,f){return i(c,d,e,f,a,b)}}function i(b,c,e,f,g,h){var i,k,l,m,n=e.block,o=e["else"],p=d(c)||{};if(p.isResolved&&!p.isDeferredPending)return b;if(f.hasOwnProperty("key"))k=f.key;else{if(!p.hasOwnProperty("key"))return a(g,"No key specified","WARN"),b;k=p.key}return m=f.type||p.type,k=j(c.resolve(k),m),l=j(c.resolve(f.value),m),h(k,l)?(p.isPending||(i=!0,p.isPending=!0),n&&(b=b.render(n,c)),i&&(p.isResolved=!0)):o&&(b=b.render(o,c)),b}function j(a,b){switch(b&&(b=b.toLowerCase()),b){case"number":return+a;case"string":return String(a);case"boolean":return a="false"===a?!1:a,Boolean(a);case"date":return new Date(a)}return a}var k={},l={tap:function(a,c,d){return b("tap"),d.resolve(a)},sep:function(a,b,c){var d=c.block;return b.stack.index===b.stack.of-1?a:d?d(a,b):a},first:function(a,b,c){return 0===b.stack.index?c.block(a,b):a},last:function(a,b,c){return b.stack.index===b.stack.of-1?c.block(a,b):a},contextDump:function(b,c,d,e){var f,h,i=c.resolve(e.to),j=c.resolve(e.key);switch(j){case"full":f=c.stack;break;default:f=c.stack.head}switch(h=JSON.stringify(f,g,2),i){case"console":a("contextDump",h);break;default:h=h.replace(/</g,"\\u003c"),b=b.write(h)}return b},math:function(b,c,g,h){var i,j=h.key,k=h.method,l=h.operand,m=h.round;if(!h.hasOwnProperty("key")||!h.method)return a("math","`key` or `method` was not provided","ERROR"),b;switch(j=parseFloat(c.resolve(j)),l=parseFloat(c.resolve(l)),k){case"mod":0===l&&a("math","Division by 0","ERROR"),i=j%l;break;case"add":i=j+l;break;case"subtract":i=j-l;break;case"multiply":i=j*l;break;case"divide":0===l&&a("math","Division by 0","ERROR"),i=j/l;break;case"ceil":case"floor":case"round":case"abs":i=Math[k](j);break;case"toint":i=parseInt(j,10);break;default:a("math","Method `"+k+"` is not supported","ERROR")}return"undefined"!=typeof i&&(m&&(i=Math.round(i)),g&&g.block?(c=e(c,{key:i}),b=b.render(g.block,c),f(d(c))):b=b.write(i)),b},select:function(b,c,g,h){var i=g.block,j={};return h.hasOwnProperty("key")&&(j.key=c.resolve(h.key)),h.hasOwnProperty("type")&&(j.type=h.type),i?(c=e(c,j),b=b.render(i,c),f(d(c))):a("select","Missing body block","WARN"),b},eq:h("eq",function(a,b){return a===b}),ne:h("ne",function(a,b){return a!==b}),lt:h("lt",function(a,b){return b>a}),lte:h("lte",function(a,b){return b>=a}),gt:h("gt",function(a,b){return a>b}),gte:h("gte",function(a,b){return a>=b}),any:function(b,c,e,f){var g=d(c);return g?g.isDeferredComplete?a("any","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){g.deferreds.push(function(){g.isResolved&&(a=a.render(e.block,c)),a.end()})}):a("any","Must be used inside a {@select} block","ERROR"),b},none:function(b,c,e,f){var g=d(c);return g?g.isDeferredComplete?a("none","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){g.deferreds.push(function(){g.isResolved||(a=a.render(e.block,c)),a.end()})}):a("none","Must be used inside a {@select} block","ERROR"),b},size:function(a,b,c,d){var e,f,g=d.key;if(g=b.resolve(d.key),g&&g!==!0)if(dust.isArray(g))e=g.length;else if(!isNaN(parseFloat(g))&&isFinite(g))e=g;else if("object"==typeof g){e=0;for(f in g)g.hasOwnProperty(f)&&e++}else e=(g+"").length;else e=0;return a.write(e)}};for(var m in l)dust.helpers[m]=l[m];return dust});
!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t;"undefined"!=typeof window?t=window:"undefined"!=typeof global?t=global:"undefined"!=typeof self&&(t=self),t.page=e()}}(function(){return function e(t,n,r){function i(a,s){if(!n[a]){if(!t[a]){var c="function"==typeof require&&require;if(!s&&c)return c(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var f=n[a]={exports:{}};t[a][0].call(f.exports,function(e){var n=t[a][1][e];return i(n||e)},f,f.exports,e,t,n,r)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<r.length;a++)i(r[a]);return i}({1:[function(e,t,n){(function(n){"use strict";function r(e,t){if("function"==typeof e)return r("*",e);if("function"==typeof t)for(var n=new s(e),i=1;i<arguments.length;++i)r.callbacks.push(n.middleware(arguments[i]));else"string"==typeof e?r["string"==typeof t?"redirect":"show"](e,t):r.start(e)}function i(e){if(!e.handled){var t;t=y?g+v.hash.replace("#!",""):v.pathname+v.search,t!==e.canonicalPath&&(r.stop(),e.handled=!1,v.href=e.canonicalPath)}}function o(e){return"string"!=typeof e?e:m?decodeURIComponent(e.replace(/\+/g," ")):e}function a(e,t){"/"===e[0]&&0!==e.indexOf(g)&&(e=g+(y?"#!":"")+e);var n=e.indexOf("?");if(this.canonicalPath=e,this.path=e.replace(g,"")||"/",y&&(this.path=this.path.replace("#!","")||"/"),this.title=document.title,this.state=t||{},this.state.path=e,this.querystring=~n?o(e.slice(n+1)):"",this.pathname=o(~n?e.slice(0,n):e),this.params={},this.hash="",!y){if(!~this.path.indexOf("#"))return;var r=this.path.split("#");this.path=r[0],this.hash=o(r[1])||"",this.querystring=this.querystring.split("#")[0]}}function s(e,t){t=t||{},this.path="*"===e?"(.*)":e,this.method="GET",this.regexp=p(this.path,this.keys=[],t)}function c(e){if(1===u(e)&&!(e.metaKey||e.ctrlKey||e.shiftKey||e.defaultPrevented)){for(var t=e.path?e.path[0]:e.target;t&&"A"!==t.nodeName;)t=t.parentNode;if(t&&"A"===t.nodeName&&!t.hasAttribute("download")&&"external"!==t.getAttribute("rel")){var i=t.getAttribute("href");if((y||t.pathname!==v.pathname||!t.hash&&"#"!==i)&&!(i&&i.indexOf("mailto:")>-1)&&!t.target&&f(t.href)){var o=t.pathname+t.search+(t.hash||"");void 0!==n&&o.match(/^\/[a-zA-Z]:\//)&&(o=o.replace(/^\/[a-zA-Z]:\//,"/"));var a=o;0===o.indexOf(g)&&(o=o.substr(g.length)),y&&(o=o.replace("#!","")),g&&a===o||(e.preventDefault(),r.show(a))}}}}function u(e){return e=e||window.event,null===e.which?e.button:e.which}function f(e){var t=v.protocol+"//"+v.hostname;return v.port&&(t+=":"+v.port),e&&0===e.indexOf(t)}var p=e("path-to-regexp");t.exports=r;var h,d,l="undefined"!=typeof document&&document.ontouchstart?"touchstart":"click",v="undefined"!=typeof window&&(window.history.location||window.location),w=!0,m=!0,g="",y=!1;r.callbacks=[],r.exits=[],r.current="",r.len=0,r.base=function(e){if(0===arguments.length)return g;g=e},r.start=function(e){if(e=e||{},!h&&(h=!0,!1===e.dispatch&&(w=!1),!1===e.decodeURLComponents&&(m=!1),!1!==e.popstate&&window.addEventListener("popstate",x,!1),!1!==e.click&&document.addEventListener(l,c,!1),!0===e.hashbang&&(y=!0),w)){var t=y&&~v.hash.indexOf("#!")?v.hash.substr(2)+v.search:v.pathname+v.search+v.hash;r.replace(t,null,!0,w)}},r.stop=function(){h&&(r.current="",r.len=0,h=!1,document.removeEventListener(l,c,!1),window.removeEventListener("popstate",x,!1))},r.show=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,!1!==n&&r.dispatch(o),!1!==o.handled&&!1!==i&&o.pushState(),o},r.back=function(e,t){r.len>0?(history.back(),r.len--):e?setTimeout(function(){r.show(e,t)}):setTimeout(function(){r.show(g,t)})},r.redirect=function(e,t){"string"==typeof e&&"string"==typeof t&&r(e,function(e){setTimeout(function(){r.replace(t)},0)}),"string"==typeof e&&void 0===t&&setTimeout(function(){r.replace(e)},0)},r.replace=function(e,t,n,i){var o=new a(e,t);return r.current=o.path,o.init=n,o.save(),!1!==i&&r.dispatch(o),o},r.dispatch=function(e){function t(){var e=r.exits[s++];if(!e)return n();e(o,t)}function n(){var t=r.callbacks[a++];return e.path!==r.current?void(e.handled=!1):t?void t(e,n):i(e)}var o=d,a=0,s=0;d=e,o?t():n()},r.exit=function(e,t){if("function"==typeof e)return r.exit("*",e);for(var n=new s(e),i=1;i<arguments.length;++i)r.exits.push(n.middleware(arguments[i]))},r.Context=a,a.prototype.pushState=function(){r.len++,history.pushState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},a.prototype.save=function(){history.replaceState(this.state,this.title,y&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},r.Route=s,s.prototype.middleware=function(e){var t=this;return function(n,r){if(t.match(n.path,n.params))return e(n,r);r()}},s.prototype.match=function(e,t){var n=this.keys,r=e.indexOf("?"),i=~r?e.slice(0,r):e,a=this.regexp.exec(decodeURIComponent(i));if(!a)return!1;for(var s=1,c=a.length;s<c;++s){var u=n[s-1],f=o(a[s]);void 0===f&&hasOwnProperty.call(t,u.name)||(t[u.name]=f)}return!0};var x=function(){var e=!1;if("undefined"!=typeof window)return"complete"===document.readyState?e=!0:window.addEventListener("load",function(){setTimeout(function(){e=!0},0)}),function(t){if(e)if(t.state){var n=t.state.path;r.replace(n,t.state)}else r.show(v.pathname+v.hash,void 0,void 0,!1)}}();r.sameOrigin=f}).call(this,e("_process"))},{_process:2,"path-to-regexp":3}],2:[function(e,t,n){function r(){}var i=t.exports={};i.nextTick=function(){var e="undefined"!=typeof window&&window.setImmediate,t="undefined"!=typeof window&&window.MutationObserver,n="undefined"!=typeof window&&window.postMessage&&window.addEventListener;if(e)return function(e){return window.setImmediate(e)};var r=[];if(t){var i=document.createElement("div");return new MutationObserver(function(){var e=r.slice();r.length=0,e.forEach(function(e){e()})}).observe(i,{attributes:!0}),function(e){r.length||i.setAttribute("yes","no"),r.push(e)}}return n?(window.addEventListener("message",function(e){var t=e.source;if((t===window||null===t)&&"process-tick"===e.data&&(e.stopPropagation(),r.length>0)){r.shift()()}},!0),function(e){r.push(e),window.postMessage("process-tick","*")}):function(e){setTimeout(e,0)}}(),i.title="browser",i.browser=!0,i.env={},i.argv=[],i.on=r,i.addListener=r,i.once=r,i.off=r,i.removeListener=r,i.removeAllListeners=r,i.emit=r,i.binding=function(e){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(e){throw new Error("process.chdir is not supported")}},{}],3:[function(e,t,n){function r(e){for(var t,n=[],r=0,i=0,o="";null!=(t=w.exec(e));){var a=t[0],c=t[1],u=t.index;if(o+=e.slice(i,u),i=u+a.length,c)o+=c[1];else{o&&(n.push(o),o="");var f=t[2],p=t[3],h=t[4],d=t[5],l=t[6],v=t[7],m="+"===l||"*"===l,g="?"===l||"*"===l,y=f||"/",x=h||d||(v?".*":"[^"+y+"]+?");n.push({name:p||r++,prefix:f||"",delimiter:y,optional:g,repeat:m,pattern:s(x)})}}return i<e.length&&(o+=e.substr(i)),o&&n.push(o),n}function i(e){return o(r(e))}function o(e){for(var t=new Array(e.length),n=0;n<e.length;n++)"object"==typeof e[n]&&(t[n]=new RegExp("^"+e[n].pattern+"$"));return function(n){for(var r="",i=n||{},o=0;o<e.length;o++){var a=e[o];if("string"!=typeof a){var s,c=i[a.name];if(null==c){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to be defined')}if(v(c)){if(!a.repeat)throw new TypeError('Expected "'+a.name+'" to not repeat, but received "'+c+'"');if(0===c.length){if(a.optional)continue;throw new TypeError('Expected "'+a.name+'" to not be empty')}for(var u=0;u<c.length;u++){if(s=encodeURIComponent(c[u]),!t[o].test(s))throw new TypeError('Expected all "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=(0===u?a.prefix:a.delimiter)+s}}else{if(s=encodeURIComponent(c),!t[o].test(s))throw new TypeError('Expected "'+a.name+'" to match "'+a.pattern+'", but received "'+s+'"');r+=a.prefix+s}}else r+=a}return r}}function a(e){return e.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function c(e,t){return e.keys=t,e}function u(e){return e.sensitive?"":"i"}function f(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return c(e,t)}function p(e,t,n){for(var r=[],i=0;i<e.length;i++)r.push(l(e[i],t,n).source);return c(new RegExp("(?:"+r.join("|")+")",u(n)),t)}function h(e,t,n){for(var i=r(e),o=d(i,n),a=0;a<i.length;a++)"string"!=typeof i[a]&&t.push(i[a]);return c(o,t)}function d(e,t){t=t||{};for(var n=t.strict,r=!1!==t.end,i="",o=e[e.length-1],s="string"==typeof o&&/\/$/.test(o),c=0;c<e.length;c++){var f=e[c];if("string"==typeof f)i+=a(f);else{var p=a(f.prefix),h=f.pattern;f.repeat&&(h+="(?:"+p+h+")*"),h=f.optional?p?"(?:"+p+"("+h+"))?":"("+h+")?":p+"("+h+")",i+=h}}return n||(i=(s?i.slice(0,-2):i)+"(?:\\/(?=$))?"),i+=r?"$":n&&s?"":"(?=\\/|$)",new RegExp("^"+i,u(t))}function l(e,t,n){return t=t||[],v(t)?n||(n={}):(n=t,t=[]),e instanceof RegExp?f(e,t,n):v(e)?p(e,t,n):h(e,t,n)}var v=e("isarray");t.exports=l,t.exports.parse=r,t.exports.compile=i,t.exports.tokensToFunction=o,t.exports.tokensToRegExp=d;var w=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g")},{isarray:4}],4:[function(e,t,n){t.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},{}]},{},[1])(1)});
(function(){"use strict";function e(){}function t(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function n(e){return function(){return this[e].apply(this,arguments)}}var r=e.prototype,i=this,s=i.EventEmitter;r.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp){t={};for(n in r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n])}else t=r[e]||(r[e]=[]);return t},r.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},r.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&(t={},t[e]=n),t||n},r.addListener=function(e,n){var r,i=this.getListenersAsObject(e),s="object"==typeof n;for(r in i)i.hasOwnProperty(r)&&-1===t(i[r],n)&&i[r].push(s?n:{listener:n,once:!1});return this},r.on=n("addListener"),r.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},r.once=n("addOnceListener"),r.defineEvent=function(e){return this.getListeners(e),this},r.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},r.removeListener=function(e,n){var r,i,s=this.getListenersAsObject(e);for(i in s)s.hasOwnProperty(i)&&-1!==(r=t(s[i],n))&&s[i].splice(r,1);return this},r.off=n("removeListener"),r.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},r.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},r.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},r.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},r.removeAllListeners=n("removeEvent"),r.emitEvent=function(e,t){var n,r,i,s,o=this.getListenersAsObject(e);for(s in o)if(o.hasOwnProperty(s))for(n=o[s].slice(0),i=0;i<n.length;i++)r=n[i],!0===r.once&&this.removeListener(e,r.listener),r.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(e,r.listener);return this},r.trigger=n("emitEvent"),r.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},r.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},r._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},r._getEvents=function(){return this._events||(this._events={})},e.noConflict=function(){return i.EventEmitter=s,e},"function"==typeof define&&define.amd?define(function(){return e}):"object"==typeof module&&module.exports?module.exports=e:i.EventEmitter=e}).call(this);
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.</div></div><br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_1},{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar"]),ctx,{"block":body_2},{}).w("<div id=\"page-content-wrapper\"><div class=\"container-fluid\"><div class=\"row\"><div class=\"col-lg-12\">").s(ctx.get(["documentation"], false),ctx,{"block":body_3},{}).w("</div></div><br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-toggle\"><span class=\"glyphicon glyphicon-menu-hamburger\"></span></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><div class=\"row\"><div class=\"col-md-12\"><div id=\"docma-content\"></div></div></div><br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" href=\"https://github.com/onury/docma\">Docma</a></b>.</span></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar navbar-default navbar-fixed-top\"><div class=\"").x(ctx.get(["boxed"], false),ctx,{"else":body_2,"block":body_3},{}).w("\"><div class=\"nav navbar-left nav-left\"><div class=\"navbar-brand\"><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></div></div>").h("gt",ctx,{"block":body_4},{"key":ctx.getPath(false, ["template","options","navItems","length"]),"value":0},"h").w("</div></nav>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("container-fluid");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<ul class=\"nav navbar-nav\">").s(ctx.getPath(false, ["template","options","navItems"]),ctx,{"block":body_5},{}).w("</ul>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_6,"block":body_7},{});}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_8,"block":body_9},{}).w("\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;").f(ctx.get(["label"], false),ctx,"h").w("&nbsp;<span class=\"caret\"></span></a><ul class=\"dropdown-menu\">").s(ctx.get(["items"], false),ctx,{"block":body_10},{}).w("</ul></li>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("#");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_10.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_5},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_2,"block":body_3},{}).w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">").x(ctx.get(["iconClass"], false),ctx,{"block":body_4},{}).f(ctx.get(["label"], false),ctx,"h",["s"]).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("#");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"ico ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>&nbsp;&nbsp;");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"block":body_3},{}).w("</td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_3.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_2},{}).w("</tbody></table>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div class=\"sidebar-title\"><span><b>").f(ctx.getPath(false, ["template","options","title"]),ctx,"h").w("</b></span></div>").x(ctx.getPath(false, ["template","options","search"]),ctx,{"block":body_1},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").s(ctx.get(["symbols"], false),ctx,{"block":body_2},{}).w("</ul><div class=\"sidebar-nav-space\"></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div class=\"sidebar-search\"><input id=\"txt-search\" type=\"search\" class=\"form-control\" placeholder=\"Search...\" /><div class=\"sidebar-search-clean\"><span class=\"glyphicon glyphicon-remove-circle\"></span></div></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$menuitem"]).w("</li>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.w("<div id=\"").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\" class=\"symbol-container\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.getPath(true, []),ctx,"h",["$id"]).w("\"><span class=\"glyphicon glyphicon-link color-gray-light\" aria-hidden=\"true\"></span><code class=\"symbol-name\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.get(["symbol"], false),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.get(["symbol"], false),ctx,"h",["$type"]).w("</code></a>").f(ctx.get(["symbol"], false),ctx,"h",["s","$tags"]).w("</div>").x(ctx.getPath(false, ["symbol","augments"]),ctx,{"block":body_1},{}).x(ctx.getPath(false, ["symbol","alias"]),ctx,{"block":body_2},{}).w("</div><div class=\"symbol-definition\">").x(ctx.getPath(false, ["symbol","classdesc"]),ctx,{"block":body_3},{}).f(ctx.get(["symbol"], false),ctx,"h",["s","$desc"]).x(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_8},{}).h("eq",ctx,{"else":body_13,"block":body_16},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","returns"]),ctx,{"block":body_17},{}).x(ctx.getPath(false, ["symbol","exceptions"]),ctx,{"block":body_20},{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_23},{}).x(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_24},{}).x(ctx.getPath(false, ["template","options","symbolMeta"]),ctx,{"block":body_26},{}).w("</div></div><hr />").h("eq",ctx,{"block":body_30},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_32,"block":body_34},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Extends:</b> ").f(ctx.get(["symbol"], false),ctx,"h",["s","$extends"]).w("</p>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<p class=\"space-left-sm\"><b>Alias:</b> <code>").f(ctx.getPath(false, ["symbol","alias"]),ctx,"h",["s","$dot_prop"]).w("</code></p>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<table>").x(ctx.getPath(false, ["symbol","version"]),ctx,{"block":body_4},{}).x(ctx.getPath(false, ["symbol","copyright"]),ctx,{"block":body_5},{}).x(ctx.getPath(false, ["symbol","author"]),ctx,{"block":body_6},{}).x(ctx.getPath(false, ["symbol","license"]),ctx,{"block":body_7},{}).w("</table><br />");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<tr><td><b>Version:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","version"]),ctx,"h",["s"]).w("</td></tr>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><b>Copyright:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","copyright"]),ctx,"h",["s"]).w("</td></tr>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<tr><td><b>Author:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","author"]),ctx,"h",["s","$author"]).w("</td></tr>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<tr><td><b>License:</b>&nbsp;&nbsp;&nbsp;</td><td>").f(ctx.getPath(false, ["symbol","license"]),ctx,"h",["s"]).w("</td></tr>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b>See</b>").h("gt",ctx,{"else":body_9,"block":body_11},{"key":ctx.getPath(false, ["symbol","see","length"]),"value":1},"h").w("</p><br />");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_10},{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("<ul>").s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_12},{}).w("</ul>");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.get(["symbol"], false)),{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_14,"block":body_15},{});}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{});}body_14.__dustBody=!0;function body_15(chk,ctx){return chk;}body_15.__dustBody=!0;function body_16(chk,ctx){return chk;}body_16.__dustBody=!0;function body_17(chk,ctx){return chk.h("gt",ctx,{"else":body_18,"block":body_19},{"key":ctx.getPath(false, ["symbol","returns","length"]),"value":"1","type":"number"},"h");}body_17.__dustBody=!0;function body_18(chk,ctx){return chk.w("<p><b>Returns:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.w("<b>Returns:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.h("gt",ctx,{"else":body_21,"block":body_22},{"key":ctx.getPath(false, ["symbol","exceptions","length"]),"value":"1","type":"number"},"h");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.w("<p><b>Throws:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.w("<b>Throws:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.get(["symbol"], false)),{});}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.w("<p><b>Example</b></p>").s(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_25},{});}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.w("<pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt"]).w("</code></pre>");}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_27},{});}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.w("<p class=\"symbol-meta\">").x(ctx.getPath(false, ["symbol","meta","filename"]),ctx,{"block":body_28},{}).x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_29},{}).w("</p>");}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.w("<b>File:</b> ").f(ctx.getPath(false, ["symbol","meta","filename"]),ctx,"h").w("&nbsp;&nbsp;");}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.w("<b>Line:</b> ").f(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,"h").w("&nbsp;&nbsp;");}body_29.__dustBody=!0;function body_30(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","$constructor"]),ctx,{"block":body_31},{});}body_30.__dustBody=!0;function body_31(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(false, ["symbol","$constructor"]),"template":ctx.get(["template"], false)});}body_31.__dustBody=!0;function body_32(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","$members"]),ctx,{"block":body_33},{});}body_32.__dustBody=!0;function body_33(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_33.__dustBody=!0;function body_34(chk,ctx){return chk;}body_34.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var docma = {"routes":[{"id":"api:","type":"api","name":"_def_","path":"/api","contentPath":null},{"id":"content:api_guidelines","type":"content","name":"api_guidelines","path":"/api_guidelines","contentPath":"content/api_guidelines.html"},{"id":"content:application_manifest","type":"content","name":"application_manifest","path":"/application_manifest","contentPath":"content/application_manifest.html"},{"id":"content:build_doc","type":"content","name":"build_doc","path":"/build_doc","contentPath":"content/build_doc.html"},{"id":"content:build_rpm","type":"content","name":"build_rpm","path":"/build_rpm","contentPath":"content/build_rpm.html"},{"id":"content:environment","type":"content","name":"environment","path":"/environment","contentPath":"content/environment.html"},{"id":"content:ui_guidelines","type":"content","name":"ui_guidelines","path":"/ui_guidelines","contentPath":"content/ui_guidelines.html"},{"id":"content:readme","type":"content","name":"readme","path":"/readme","contentPath":"content/readme.html"}],"apis":{"_def_":{"documentation":[{"comment":"/**\n * Input to self-signed certificate generator. Any missing property or\n * any property with a falsy value is replaced with its default value.\n *\n * Default values come from OrganizationContact (oc), root, pki records.\n *\n * @typedef {Object} CertificateDetail\n * @param {string} [CountryCode=oc.CountryCode] -\n * @param {string} [State=oc.State] -\n * @param {string} [Locality=oc.City] -\n * @param {string} [Organization=oc.Company] -\n * @param {string} [OrganizationalUnitName=oc.Department] -\n * @param {string} [CommonName=NethServer] -\n * @param {string} [EmailAddress=root.EmailAddress] -\n * @param {string[]} [SubjectAltNames] -\n * @param {integer} [CertificateDuration=pki.CertificateDuration] -\n */","meta":{"filename":"certificates.js","lineno":171,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{}},"description":"Input to self-signed certificate generator. Any missing property or\nany property with a falsy value is replaced with its default value.\n\nDefault values come from OrganizationContact (oc), root, pki records.","kind":"typedef","name":"CertificateDetail","type":{"names":["Object"]},"params":[{"type":{"names":["string"]},"optional":true,"defaultvalue":"oc.CountryCode","description":"-","name":"CountryCode"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"oc.State","description":"-","name":"State"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"oc.City","description":"-","name":"Locality"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"oc.Company","description":"-","name":"Organization"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"oc.Department","description":"-","name":"OrganizationalUnitName"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"NethServer","description":"-","name":"CommonName"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"root.EmailAddress","description":"-","name":"EmailAddress"},{"type":{"names":["Array.<string>"]},"optional":true,"description":"-","name":"SubjectAltNames"},{"type":{"names":["integer"]},"optional":true,"defaultvalue":"pki.CertificateDuration","description":"-","name":"CertificateDuration"}],"longname":"CertificateDetail","scope":"global","$longname":"CertificateDetail"},{"comment":"/**\n * Represent an SSL certificate meta data\n *\n * @typedef {Object} CertificateMeta\n * @param {string} key the certificate identifier\n * @param {string} issuer the certificate issuer\n * @param {integer} expiration_t the certificate expiration date in seconds since the Epoch\n * @param {boolean} expired the certificate expiration date\n * @param {boolean} default true if the certificate is selected as system-wide default\n * @see {@link #nethserver.getAllCertificates}\n */","meta":{"filename":"certificates.js","lineno":33,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{}},"description":"Represent an SSL certificate meta data","kind":"typedef","name":"CertificateMeta","type":{"names":["Object"]},"params":[{"type":{"names":["string"]},"description":"the certificate identifier","name":"key"},{"type":{"names":["string"]},"description":"the certificate issuer","name":"issuer"},{"type":{"names":["integer"]},"description":"the certificate expiration date in seconds since the Epoch","name":"expiration_t"},{"type":{"names":["boolean"]},"description":"the certificate expiration date","name":"expired"},{"type":{"names":["boolean"]},"description":"true if the certificate is selected as system-wide default","name":"default"}],"see":["{@link #nethserver.getAllCertificates}"],"longname":"CertificateMeta","scope":"global","$longname":"CertificateMeta"},{"comment":"/**\n  * Represent an SSL certificate data parts\n  *\n  * @typedef {Object} CertificatePayload\n  * @param {string} key the certificate identifier that must be unique on the system\n  * @param {string} privateKey the certificate private key in PEM encoded format\n  * @param {string} certificate the X.509 certificate, PEM-encoded\n  * @param {string} chain the certificate chain file for intermediate autorities, PEM-encoded. Can be an empty.\n  */","meta":{"filename":"certificates.js","lineno":45,"columnno":1,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{}},"description":"Represent an SSL certificate data parts","kind":"typedef","name":"CertificatePayload","type":{"names":["Object"]},"params":[{"type":{"names":["string"]},"description":"the certificate identifier that must be unique on the system","name":"key"},{"type":{"names":["string"]},"description":"the certificate private key in PEM encoded format","name":"privateKey"},{"type":{"names":["string"]},"description":"the X.509 certificate, PEM-encoded","name":"certificate"},{"type":{"names":["string"]},"description":"the certificate chain file for intermediate autorities, PEM-encoded. Can be an empty.","name":"chain"}],"longname":"CertificatePayload","scope":"global","$longname":"CertificatePayload"},{"comment":"/**\n * The standard DOM CustomEvent object\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n * @typedef {Event} CustomEvent\n * @param {String} type - the event type identifier\n * @param {TaskCompleted|TaskProgress} detail - an object with the event details\n */","meta":{"filename":"event.js","lineno":215,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"The standard DOM CustomEvent object","see":["{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}"],"kind":"typedef","name":"CustomEvent","type":{"names":["Event"]},"params":[{"type":{"names":["String"]},"description":"the event type identifier","name":"type"},{"type":{"names":["TaskCompleted","TaskProgress"]},"description":"an object with the event details","name":"detail"}],"longname":"CustomEvent","scope":"global","$longname":"CustomEvent"},{"comment":"/**\n     * An object representing the current system date and time string, time zone\n     * and current time source settings\n     *\n     * @typedef DateSettings\n     * @param {string} DateTime - A string representation of the current local date and time, like \"YYYY-MM-DD HH:mm\"\n     * @param {string} TimeZone - The system time zone. Valid values are returned by getTimeZones()\n     * @param {string|boolean} NTPServer - The NTP server host name, empty string or false. Empty string means \"default server\", false means NTP disabled.\n     *\n     * @see {@link #getTimeZones}\n     */","meta":{"filename":"date.js","lineno":46,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{}},"description":"An object representing the current system date and time string, time zone\nand current time source settings","kind":"typedef","name":"DateSettings","params":[{"type":{"names":["string"]},"description":"A string representation of the current local date and time, like \"YYYY-MM-DD HH:mm\"","name":"DateTime"},{"type":{"names":["string"]},"description":"The system time zone. Valid values are returned by getTimeZones()","name":"TimeZone"},{"type":{"names":["string","boolean"]},"description":"The NTP server host name, empty string or false. Empty string means \"default server\", false means NTP disabled.","name":"NTPServer"}],"see":["{@link #getTimeZones}"],"longname":"DateSettings","scope":"global","$longname":"DateSettings"},{"comment":"/**\n * This is an event listener callback definition, specified by DOM EventTarget\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget}\n * @see {@link #TaskProgress}\n * @see {@link #TaskCompleted}\n * @callback EventListener\n * @param {CustomEvent} ev\n */","meta":{"filename":"event.js","lineno":223,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"This is an event listener callback definition, specified by DOM EventTarget","see":["{@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget}","{@link #TaskProgress}","{@link #TaskCompleted}"],"kind":"typedef","name":"EventListener","type":{"names":["function"]},"params":[{"type":{"names":["CustomEvent"]},"name":"ev"}],"longname":"EventListener","scope":"global","$longname":"EventListener"},{"comment":"/**\n * A new certificate emission request for Let's Encrypt\n *\n * @typedef {Object} LetsEncryptRequest\n * @param {string[]} LetsEncryptDomains - The certificate alternative DNS domains\n * @param {string} [LetsEncryptMail=''] - The certificate email contact information\n */","meta":{"filename":"certificates.js","lineno":258,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{}},"description":"A new certificate emission request for Let's Encrypt","kind":"typedef","name":"LetsEncryptRequest","type":{"names":["Object"]},"params":[{"type":{"names":["Array.<string>"]},"description":"The certificate alternative DNS domains","name":"LetsEncryptDomains"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"''","description":"The certificate email contact information","name":"LetsEncryptMail"}],"longname":"LetsEncryptRequest","scope":"global","$longname":"LetsEncryptRequest"},{"comment":"/**\n         * List installed applications by searching json manifests inside /usr/share/cockpit/nethserver/applications/\n         * See applications manifest for the format\n         *\n         * @return {Promise.<Application>} on success a promise with the manifest object, throws an error otherwise\n         */","meta":{"range":[1852,2648],"filename":"applications.js","lineno":52,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/applications","code":{"id":"astnode100006990","name":"getApplication","type":"FunctionExpression"},"vars":{"path":"nethserver.applications.getApplication~path","manifest":"nethserver.applications.getApplication~manifest","":null}},"description":"List installed applications by searching json manifests inside /usr/share/cockpit/nethserver/applications/\nSee applications manifest for the format","returns":[{"type":{"names":["Promise.<Application>"]},"description":"on success a promise with the manifest object, throws an error otherwise"}],"name":"getApplication","longname":"nethserver.applications.getApplication","kind":"function","memberof":"nethserver.applications","scope":"static","$longname":"nethserver.applications.getApplication"},{"comment":"/**\n         * List installed applications by searching json manifests inside /usr/share/cockpit/nethserver/applications/\n         * See applications manifest for the format\n         *\n         * @return {Promise.<Array>} a promise with a list of installed applications, or undefined on error\n         */","meta":{"range":[1267,1519],"filename":"applications.js","lineno":38,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/applications","code":{"id":"astnode100006964","name":"getApplications","type":"FunctionExpression"},"vars":{"":null}},"description":"List installed applications by searching json manifests inside /usr/share/cockpit/nethserver/applications/\nSee applications manifest for the format","returns":[{"type":{"names":["Promise.<Array>"]},"description":"a promise with a list of installed applications, or undefined on error"}],"name":"getApplications","longname":"nethserver.applications.getApplications","kind":"function","memberof":"nethserver.applications","scope":"static","$longname":"nethserver.applications.getApplications"},{"comment":"/**\n     * Creates a nethserver.Error instance from a NsError object. The resulting\n     * object has the same interface of NsError and can be thrown as an\n     * exception.\n     *\n     * @class\n     * @param {NsError} o - The error model\n     * @see {@link #NsError}\n     * @example\n     * throw new nethserver.Error({\n     *      id: 15083129133452,\n     *      type: 'NotFound',\n     *      message: 'The given object was not found'\n     * });\n     */","meta":{"range":[2242,2534],"filename":"error.js","lineno":57,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100001360","name":"nethserver.Error","type":"FunctionExpression","paramnames":["o"]},"vars":{"this.id":"nethserver.Error#id","this.type":"nethserver.Error#type","this.message":"nethserver.Error#message","this.originalMessage":"nethserver.Error#originalMessage","this.attributes":"nethserver.Error#attributes","this.detail":"nethserver.Error#detail"}},"description":"Creates a nethserver.Error instance from a NsError object. The resulting\nobject has the same interface of NsError and can be thrown as an\nexception.","kind":"class","params":[{"type":{"names":["NsError"]},"description":"The error model","name":"o"}],"see":["{@link #NsError}"],"examples":["throw new nethserver.Error({\n     id: 15083129133452,\n     type: 'NotFound',\n     message: 'The given object was not found'\n});"],"name":"Error","longname":"nethserver.Error","memberof":"nethserver","scope":"static","$longname":"nethserver.Error"},{"comment":"/**\n * This is a singleton instance of EventMonitor\n * @see {@link #EventMonitor}\n * @name nethserver.eventMonitor\n * @instance\n */","meta":{"filename":"event.js","lineno":191,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"This is a singleton instance of EventMonitor","see":["{@link #EventMonitor}"],"name":"eventMonitor","scope":"static","memberof":"nethserver","longname":"nethserver.eventMonitor","kind":"member","$longname":"nethserver.eventMonitor"},{"comment":"/**\n * The EventMonitor object implements the EventTarget interface as defined by\n * DOM. You don't need to create an instance of this class: the \"nethserver\"\n * namespace has a singleton instance of this class.\n *\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget|EventTarget}\n * @constructor\n * @name nethserver.EventMonitor\n * @protected\n */","meta":{"filename":"event.js","lineno":50,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"The EventMonitor object implements the EventTarget interface as defined by\nDOM. You don't need to create an instance of this class: the \"nethserver\"\nnamespace has a singleton instance of this class.","see":["{@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget|EventTarget}"],"kind":"class","name":"EventMonitor","access":"protected","memberof":"nethserver","longname":"nethserver.EventMonitor","scope":"static","$longname":"nethserver.EventMonitor","$members":[{"comment":"/**\n * Attach a callback to the EventMonitor object\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener}\n * @see {@link #TaskProgress}\n * @see {@link #TaskCompleted}\n * @function\n * @name nethserver.EventMonitor.addEventListener\n * @param {String} eventName - actually \"nsevent.succeeded\", \"nsevent.failed\", \"nsevent.progress\"\n * @param {EventListener} eventListener\n * @example\n * nethserver.eventMonitor.addEventListener('nsevent.succeeded', handler);\n * nethserver.eventMonitor.addEventListener('nsevent.failed', handler);\n * nethserver.eventMonitor.addEventListener('nsevent.progress', handler);\n */","meta":{"filename":"event.js","lineno":199,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"Attach a callback to the EventMonitor object","see":["{@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener}","{@link #TaskProgress}","{@link #TaskCompleted}"],"kind":"function","name":"addEventListener","params":[{"type":{"names":["String"]},"description":"actually \"nsevent.succeeded\", \"nsevent.failed\", \"nsevent.progress\"","name":"eventName"},{"type":{"names":["EventListener"]},"name":"eventListener"}],"examples":["nethserver.eventMonitor.addEventListener('nsevent.succeeded', handler);\nnethserver.eventMonitor.addEventListener('nsevent.failed', handler);\nnethserver.eventMonitor.addEventListener('nsevent.progress', handler);"],"memberof":"nethserver.EventMonitor","longname":"nethserver.EventMonitor.addEventListener","scope":"static","$longname":"nethserver.EventMonitor.addEventListener"},{"comment":"/**\n * Waits until the object is ready to dispatch events\n * @function\n * @name nethserver.EventMonitor.wait\n * @return {Promise} resolved when the object is ready\n */","meta":{"filename":"event.js","lineno":162,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"Waits until the object is ready to dispatch events","kind":"function","name":"wait","returns":[{"type":{"names":["Promise"]},"description":"resolved when the object is ready"}],"memberof":"nethserver.EventMonitor","longname":"nethserver.EventMonitor.wait","scope":"static","$longname":"nethserver.EventMonitor.wait"}]},{"comment":"/**\n * Retrieve a database object\n * @name nethserver.getDatabase\n * @function\n * @param {string} path The absolute file system path of the DB, or a DB name\n * @returns {Nsdb}\n * @example\n * var db = nethserver.getDatabase('configuration');\n * @example\n * var tmpdb = nethserver.getDatabase('/tmp/db.temporary');\n */","meta":{"filename":"db.js","lineno":656,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"Retrieve a database object","name":"getDatabase","kind":"function","params":[{"type":{"names":["string"]},"description":"The absolute file system path of the DB, or a DB name","name":"path"}],"returns":[{"type":{"names":["Nsdb"]}}],"examples":["var db = nethserver.getDatabase('configuration');","var tmpdb = nethserver.getDatabase('/tmp/db.temporary');"],"memberof":"nethserver","longname":"nethserver.getDatabase","scope":"static","$longname":"nethserver.getDatabase"},{"comment":"/**\n     * This is a singleton instance of NotificationMonitor, an object implementing\n     * the EventTarget interface\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget}\n     * @name nethserver.notificationMonitor\n     * @instance\n     */","meta":{"filename":"notification.js","lineno":41,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"This is a singleton instance of NotificationMonitor, an object implementing\nthe EventTarget interface","see":["{@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget}"],"name":"notificationMonitor","scope":"static","memberof":"nethserver","longname":"nethserver.notificationMonitor","kind":"member","$longname":"nethserver.notificationMonitor","$members":[{"comment":"/**\n     * Attach a callback to the NotificationMonitor object\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener}\n     * @function\n     * @name nethserver.notificationMonitor.addEventListener\n     * @param {string} eventName - actually \"nsnotification\"\n     * @param {EventListener} eventListener\n     * @example\n     * nethserver.notificationMonitor.addEventListener('nsnotification', function(notification) {});\n     */","meta":{"filename":"notification.js","lineno":51,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"Attach a callback to the NotificationMonitor object","see":["{@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener}"],"kind":"function","name":"addEventListener","params":[{"type":{"names":["string"]},"description":"actually \"nsnotification\"","name":"eventName"},{"type":{"names":["EventListener"]},"name":"eventListener"}],"examples":["nethserver.notificationMonitor.addEventListener('nsnotification', function(notification) {});"],"memberof":"nethserver.notificationMonitor","longname":"nethserver.notificationMonitor.addEventListener","scope":"static","$longname":"nethserver.notificationMonitor.addEventListener"},{"comment":"/**\n     * Attach a callback to the NotificationMonitor object\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent}\n     * @function\n     * @name nethserver.notificationMonitor.dispatchEvent\n     * @param {string} eventName - actually \"nsnotification\"\n     * @param {Notification} notification a notification object\n     * @example\n     * nethserver.notificationMonitor.dispatchEvent('nsnotification', {\n     *    type: 'info',\n     *    title: 'Failed',\n     *    message: 'The value must be between 0 and 5',\n     *    status: 'danger',\n     *    action: 'Retry',\n     *    method: function() {\n     *      console.log(\"method called!\");\n     *    }\n     * });\n     */","meta":{"filename":"notification.js","lineno":63,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"Attach a callback to the NotificationMonitor object","see":["{@link https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent}"],"kind":"function","name":"dispatchEvent","params":[{"type":{"names":["string"]},"description":"actually \"nsnotification\"","name":"eventName"},{"type":{"names":["Notification"]},"description":"a notification object","name":"notification"}],"examples":["nethserver.notificationMonitor.dispatchEvent('nsnotification', {\n   type: 'info',\n   title: 'Failed',\n   message: 'The value must be between 0 and 5',\n   status: 'danger',\n   action: 'Retry',\n   method: function() {\n     console.log(\"method called!\");\n   }\n});"],"memberof":"nethserver.notificationMonitor","longname":"nethserver.notificationMonitor.dispatchEvent","scope":"static","$longname":"nethserver.notificationMonitor.dispatchEvent"}]},{"comment":"/**\n * Call signal-event command with given arguments.\n *\n * @example\n * nethserver.signalEvent('user-delete', [user]);\n *\n * @function\n * @name nethserver.signalEvent\n * @see {@link #TaskCompleted}\n * @param {String} nsEvent event name\n * @param {Array} [args=[]] event arguments, must be an array or empty\n * @return {Promise.<TaskCompleted|String>}\n */","meta":{"filename":"event.js","lineno":232,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"Call signal-event command with given arguments.","examples":["nethserver.signalEvent('user-delete', [user]);"],"kind":"function","name":"signalEvent","see":["{@link #TaskCompleted}"],"params":[{"type":{"names":["String"]},"description":"event name","name":"nsEvent"},{"type":{"names":["Array"]},"optional":true,"defaultvalue":"[]","description":"event arguments, must be an array or empty","name":"args"}],"returns":[{"type":{"names":["Promise.<(TaskCompleted|String)>"]}}],"memberof":"nethserver","longname":"nethserver.signalEvent","scope":"static","$longname":"nethserver.signalEvent"},{"comment":"/**\n * Store the given parameters and generate a new self-signed SSL certificate with them\n *\n * @param {CertificateDetail} inputParams - An object with updated params values\n * @see {@link #CertificateDetail}\n * @return {Promise} Success when the certificate has been persisted correctly\n */","meta":{"range":[9008,10302],"filename":"certificates.js","lineno":224,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100003238","name":"nethserver.system.certificates.generateSelfSignedCertificate","type":"FunctionExpression","paramnames":["inputParams"]},"vars":{"o":"nethserver.system.certificates.generateSelfSignedCertificate~o","":null}},"description":"Store the given parameters and generate a new self-signed SSL certificate with them","params":[{"type":{"names":["CertificateDetail"]},"description":"An object with updated params values","name":"inputParams"}],"see":["{@link #CertificateDetail}"],"returns":[{"type":{"names":["Promise"]},"description":"Success when the certificate has been persisted correctly"}],"name":"generateSelfSignedCertificate","longname":"nethserver.system.certificates.generateSelfSignedCertificate","kind":"function","memberof":"nethserver.system.certificates","scope":"static","$longname":"nethserver.system.certificates.generateSelfSignedCertificate"},{"comment":"/**\n * List the X.509 certificates available on the system\n *\n * @return {Promise.<CertificateMeta[]|Error>}\n */","meta":{"range":[1986,2924],"filename":"certificates.js","lineno":60,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100002575","name":"nethserver.system.certificates.getAllCertificates","type":"FunctionExpression","paramnames":[]},"vars":{"":null}},"description":"List the X.509 certificates available on the system","returns":[{"type":{"names":["Promise.<(Array.<CertificateMeta>|Error)>"]}}],"name":"getAllCertificates","longname":"nethserver.system.certificates.getAllCertificates","kind":"function","memberof":"nethserver.system.certificates","scope":"static","$longname":"nethserver.system.certificates.getAllCertificates"},{"comment":"/**\n * Get the currently configured parameters for LE certificate generation\n * @returns {Promise.<LetsEncryptRequest>} - Actual values\n */","meta":{"range":[10719,11125],"filename":"certificates.js","lineno":270,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100003403","name":"nethserver.system.certificates.getLetsEncryptCertificateParameters","type":"FunctionExpression","paramnames":[]},"vars":{"":null}},"description":"Get the currently configured parameters for LE certificate generation","returns":[{"type":{"names":["Promise.<LetsEncryptRequest>"]},"description":"- Actual values"}],"name":"getLetsEncryptCertificateParameters","longname":"nethserver.system.certificates.getLetsEncryptCertificateParameters","kind":"function","memberof":"nethserver.system.certificates","scope":"static","$longname":"nethserver.system.certificates.getLetsEncryptCertificateParameters"},{"comment":"/**\n * Retrieve the self-signed SSL certificate generation parameters\n * @see {@link #CertificateDetail}\n * @return {CertificateDetail} - The current self-signed certificate generation parameters\n */","meta":{"range":[7378,8712],"filename":"certificates.js","lineno":194,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100003070","name":"nethserver.system.certificates.getSelfSignedCertificateParameters","type":"FunctionExpression","paramnames":[]},"vars":{"":null}},"description":"Retrieve the self-signed SSL certificate generation parameters","see":["{@link #CertificateDetail}"],"returns":[{"type":{"names":["CertificateDetail"]},"description":"- The current self-signed certificate generation parameters"}],"name":"getSelfSignedCertificateParameters","longname":"nethserver.system.certificates.getSelfSignedCertificateParameters","kind":"function","memberof":"nethserver.system.certificates","scope":"static","$longname":"nethserver.system.certificates.getSelfSignedCertificateParameters"},{"comment":"/**\n * Send a remote CSR request to LE to validate a new certificate, then\n * apply the new configuration\n *\n * @param {LetsEncryptRequest} request - The LE request options\n */","meta":{"range":[11305,12443],"filename":"certificates.js","lineno":286,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100003463","name":"nethserver.system.certificates.requestLetsEncryptCertificate","type":"FunctionExpression","paramnames":["request"]},"vars":{"":null}},"description":"Send a remote CSR request to LE to validate a new certificate, then\napply the new configuration","params":[{"type":{"names":["LetsEncryptRequest"]},"description":"The LE request options","name":"request"}],"name":"requestLetsEncryptCertificate","longname":"nethserver.system.certificates.requestLetsEncryptCertificate","kind":"function","memberof":"nethserver.system.certificates","scope":"static","$longname":"nethserver.system.certificates.requestLetsEncryptCertificate"},{"comment":"/**\n * Select the default system certificate. An application\n * will use the default certificate if no other way to configure a\n * certificate is provided by the application itself.\n *\n * @param {string} certkey - A key returned by {@link #getAllCertificates()}\n * @return {Promise} - Successful promise if configuration can be applied, failed otherwise\n */","meta":{"range":[12804,13675],"filename":"certificates.js","lineno":321,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100003598","name":"nethserver.system.certificates.selectDefaultCertificate","type":"FunctionExpression","paramnames":["certkey"]},"vars":{"cert":"nethserver.system.certificates.selectDefaultCertificate~cert","":null}},"description":"Select the default system certificate. An application\nwill use the default certificate if no other way to configure a\ncertificate is provided by the application itself.","params":[{"type":{"names":["string"]},"description":"A key returned by {@link #getAllCertificates()}","name":"certkey"}],"returns":[{"type":{"names":["Promise"]},"description":"- Successful promise if configuration can be applied, failed otherwise"}],"name":"selectDefaultCertificate","longname":"nethserver.system.certificates.selectDefaultCertificate","kind":"function","memberof":"nethserver.system.certificates","scope":"static","$longname":"nethserver.system.certificates.selectDefaultCertificate"},{"comment":"/**\n * Retrieve the X.509 certificate in textual format\n * @param {string} certkey - A key returned by {@link #getAllCertificates()}\n * @return {Promise.<string>} - the X.509 certificate textual representation\n */","meta":{"range":[3141,3642],"filename":"certificates.js","lineno":91,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100002711","name":"nethserver.system.certificates.showCertificate","type":"FunctionExpression","paramnames":["certkey"]},"vars":{"":null}},"description":"Retrieve the X.509 certificate in textual format","params":[{"type":{"names":["string"]},"description":"A key returned by {@link #getAllCertificates()}","name":"certkey"}],"returns":[{"type":{"names":["Promise.<string>"]},"description":"- the X.509 certificate textual representation"}],"name":"showCertificate","longname":"nethserver.system.certificates.showCertificate","kind":"function","memberof":"nethserver.system.certificates","scope":"static","$longname":"nethserver.system.certificates.showCertificate"},{"comment":"/**\n * Upload the certificate on the system and assigns it a unique indentifier\n * @param {CertificatePayload} upload An object containing the certificate parts\n * @return {Promise} Success when the certificate is uploaded and configured correctly\n */","meta":{"range":[3897,6463],"filename":"certificates.js","lineno":110,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100002773","name":"nethserver.system.certificates.uploadCertificate","type":"FunctionExpression","paramnames":["upload"]},"vars":{"tmpdump":"nethserver.system.certificates.uploadCertificate~tmpdump","cleanupTemp":"nethserver.system.certificates.uploadCertificate~cleanupTemp","":null}},"description":"Upload the certificate on the system and assigns it a unique indentifier","params":[{"type":{"names":["CertificatePayload"]},"description":"An object containing the certificate parts","name":"upload"}],"returns":[{"type":{"names":["Promise"]},"description":"Success when the certificate is uploaded and configured correctly"}],"name":"uploadCertificate","longname":"nethserver.system.certificates.uploadCertificate","kind":"function","memberof":"nethserver.system.certificates","scope":"static","$longname":"nethserver.system.certificates.uploadCertificate"},{"comment":"/**\n         * Get the date settings\n         *\n         * @see {@link #DateSettings}\n         * @return {Promise.<DateSettings>} the current date settings object\n         */","meta":{"range":[2510,3257],"filename":"date.js","lineno":69,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100003846","name":"getDate","type":"FunctionExpression"},"vars":{"o":"nethserver.system.date.getDate~o","":null}},"description":"Get the date settings","see":["{@link #DateSettings}"],"returns":[{"type":{"names":["Promise.<DateSettings>"]},"description":"the current date settings object"}],"name":"getDate","longname":"nethserver.system.date.getDate","kind":"function","memberof":"nethserver.system.date","scope":"static","$longname":"nethserver.system.date.getDate"},{"comment":"/**\n         * Time zones list supported by the system\n         *\n         * @see {@link #DateSettings}\n         * @return {Promise.<string[]>} An array of available time zone strings\n         */","meta":{"range":[5080,5293],"filename":"date.js","lineno":130,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004093","name":"getTimeZones","type":"FunctionExpression"},"vars":{"":null}},"description":"Time zones list supported by the system","see":["{@link #DateSettings}"],"returns":[{"type":{"names":["Promise.<Array.<string>>"]},"description":"An array of available time zone strings"}],"name":"getTimeZones","longname":"nethserver.system.date.getTimeZones","kind":"function","memberof":"nethserver.system.date","scope":"static","$longname":"nethserver.system.date.getTimeZones"},{"comment":"/**\n         * Change the date settings\n         *\n         * @see {@link #DateSettings}\n         * @param {DateSettings} o -\n         * @return {Promise} - successful if the given object is valid, failed if a validation error occurs\n         */","meta":{"range":[3522,4865],"filename":"date.js","lineno":95,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100003951","name":"setDate","type":"FunctionExpression"},"vars":{"validatedTimeString":"nethserver.system.date.setDate~validatedTimeString","":null}},"description":"Change the date settings","see":["{@link #DateSettings}"],"params":[{"type":{"names":["DateSettings"]},"description":"-","name":"o"}],"returns":[{"type":{"names":["Promise"]},"description":"- successful if the given object is valid, failed if a validation error occurs"}],"name":"setDate","longname":"nethserver.system.date.setDate","kind":"function","memberof":"nethserver.system.date","scope":"static","$longname":"nethserver.system.date.setDate"},{"comment":"/**\n         * Retrieve the json data in /var/cache/duc/duc.json\n         *\n         * @return {Promise} from cockpit.file\n         */","meta":{"range":[1098,1365],"filename":"disks.js","lineno":37,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004144","name":"getJSONUsage","type":"FunctionExpression"},"vars":{"fh":"nethserver.system.disks.getJSONUsage~fh","":null}},"description":"Retrieve the json data in /var/cache/duc/duc.json","returns":[{"type":{"names":["Promise"]},"description":"from cockpit.file"}],"name":"getJSONUsage","longname":"nethserver.system.disks.getJSONUsage","kind":"function","memberof":"nethserver.system.disks","scope":"static","$longname":"nethserver.system.disks.getJSONUsage"},{"comment":"/**\n         * Get date of last updated of disk usage\n         * @return {Promise.<String>} a promise with the date formatted in UTC time zone\n         */","meta":{"range":[1538,1898],"filename":"disks.js","lineno":49,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004177","name":"getUpdatedUsage","type":"FunctionExpression"},"vars":{"":null}},"description":"Get date of last updated of disk usage","returns":[{"type":{"names":["Promise.<String>"]},"description":"a promise with the date formatted in UTC time zone"}],"name":"getUpdatedUsage","longname":"nethserver.system.disks.getUpdatedUsage","kind":"function","memberof":"nethserver.system.disks","scope":"static","$longname":"nethserver.system.disks.getUpdatedUsage"},{"comment":"/**\n         * Launch update of disk usage using duc\n         * @return {Promise.<Event>} a promise of nethserver-duc-save event, at the end the UI should call again getJSONUsage and getUpdatedUsage\n         */","meta":{"range":[2127,2233],"filename":"disks.js","lineno":59,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004226","name":"updateJSONUsage","type":"FunctionExpression"}},"description":"Launch update of disk usage using duc","returns":[{"type":{"names":["Promise.<Event>"]},"description":"a promise of nethserver-duc-save event, at the end the UI should call again getJSONUsage and getUpdatedUsage"}],"name":"updateJSONUsage","longname":"nethserver.system.disks.updateJSONUsage","kind":"function","memberof":"nethserver.system.disks","scope":"static","$longname":"nethserver.system.disks.updateJSONUsage"},{"comment":"/**\n         * Add a DNS alias record pointing to 127.0.0.1\n         *\n         * @example\n         * nethserver.system.dns.addAlias({id: \"myalias.domain.org\", \"Description\": \"my secondary name\"})\n         *\n         * @param {Object} alias - DNS host name\n         * @param {string} alias.key - Host name in FQDN format\n         * @param {string} alias.Description - Optional description\n         * @return {Promise} A promise on succes, throws an error otherwise.\n         */","meta":{"range":[9773,9855],"filename":"dns.js","lineno":298,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004740","name":"addAlias","type":"FunctionExpression"}},"description":"Add a DNS alias record pointing to 127.0.0.1","examples":["nethserver.system.dns.addAlias({id: \"myalias.domain.org\", \"Description\": \"my secondary name\"})"],"params":[{"type":{"names":["Object"]},"description":"DNS host name","name":"alias"},{"type":{"names":["string"]},"description":"Host name in FQDN format","name":"alias.key"},{"type":{"names":["string"]},"description":"Optional description","name":"alias.Description"}],"returns":[{"type":{"names":["Promise"]},"description":"A promise on succes, throws an error otherwise."}],"name":"addAlias","longname":"nethserver.system.dns.addAlias","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.addAlias"},{"comment":"/**\n         * Add a DNS record pointing to an IP address\n         *\n         * @example\n         * nethserver.system.dns.addRemotHost({key: \"myhost.domain.org\", IpAddress: \"192.168.1.22\", Description: \"my PC\"}).then(function() {\n         *   // do something\n         * }, function (err) {\n         *    console.error(err);\n         * });\n         *\n         *\n         * @param {Object} host - DNS record to be added\n         * @param {string} host.key - Host name in FQDN format\n         * @param {string} host.IpAddress - Local or remote IP address\n         * @param {string} [host.Description] - Optional description\n         * @return {Promise} A promise on succes, throws an error otherwise.\n         */","meta":{"range":[6480,6567],"filename":"dns.js","lineno":208,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004621","name":"addRemoteHost","type":"FunctionExpression"}},"description":"Add a DNS record pointing to an IP address","examples":["nethserver.system.dns.addRemotHost({key: \"myhost.domain.org\", IpAddress: \"192.168.1.22\", Description: \"my PC\"}).then(function() {\n  // do something\n}, function (err) {\n   console.error(err);\n});"],"params":[{"type":{"names":["Object"]},"description":"DNS record to be added","name":"host"},{"type":{"names":["string"]},"description":"Host name in FQDN format","name":"host.key"},{"type":{"names":["string"]},"description":"Local or remote IP address","name":"host.IpAddress"},{"type":{"names":["string"]},"optional":true,"description":"Optional description","name":"host.Description"}],"returns":[{"type":{"names":["Promise"]},"description":"A promise on succes, throws an error otherwise."}],"name":"addRemoteHost","longname":"nethserver.system.dns.addRemoteHost","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.addRemoteHost"},{"comment":"/**\n         * Delete an existing DNS alias record\n         *\n         * @example\n         * nethserver.system.dns.deleteAlias('myalias.domain.org').then(function () {\n         *   // do something\n         * }, function (err) {\n         *    console.error(err);\n         * });\n         *\n         *\n         * @param {Object} hostKey - host name to be deleted\n         * @return {Promise} A promise on succes, throws an error otherwise.\n         */","meta":{"range":[11029,11113],"filename":"dns.js","lineno":336,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004758","name":"deleteAlias","type":"FunctionExpression"}},"description":"Delete an existing DNS alias record","examples":["nethserver.system.dns.deleteAlias('myalias.domain.org').then(function () {\n  // do something\n}, function (err) {\n   console.error(err);\n});"],"params":[{"type":{"names":["Object"]},"description":"host name to be deleted","name":"hostKey"}],"returns":[{"type":{"names":["Promise"]},"description":"A promise on succes, throws an error otherwise."}],"name":"deleteAlias","longname":"nethserver.system.dns.deleteAlias","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.deleteAlias"},{"comment":"/**\n         * Delete existing DNS record pointing to an IP address\n         *\n         * @example\n         * nethserver.system.dns.deleteRemoteHost('myhost.domain.org').then(function () {\n         *   // do something\n         * }, function (err) {\n         *    console.error(err);\n         * });\n         *\n         *\n         * @param {Object} hostKey - host name to be deleted\n         * @return {Promise} A promise on succes, throws an error otherwise.\n         */","meta":{"range":[7886,7975],"filename":"dns.js","lineno":247,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004639","name":"deleteRemoteHost","type":"FunctionExpression"}},"description":"Delete existing DNS record pointing to an IP address","examples":["nethserver.system.dns.deleteRemoteHost('myhost.domain.org').then(function () {\n  // do something\n}, function (err) {\n   console.error(err);\n});"],"params":[{"type":{"names":["Object"]},"description":"host name to be deleted","name":"hostKey"}],"returns":[{"type":{"names":["Promise"]},"description":"A promise on succes, throws an error otherwise."}],"name":"deleteRemoteHost","longname":"nethserver.system.dns.deleteRemoteHost","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.deleteRemoteHost"},{"comment":"/**\n         * Edit an existing DNS alias record\n         *\n         * @example\n         * nethserver.system.dns.editAlias({id: \"myalias.domain.org\", \"Description\": \"my third name\"}).then(function () {\n         *   // do something\n         * }, function (err) {\n         *    console.error(err);\n         * });\n         *\n         *\n         * @param {Object} alias - DNS host name\n         * @param {string} alias.key - Host name in FQDN format\n         * @param {string} alias.Description - Optional description\n         * @return {Promise} A promise on succes, throws an error otherwise.\n         */","meta":{"range":[10477,10561],"filename":"dns.js","lineno":318,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004749","name":"editAlias","type":"FunctionExpression"}},"description":"Edit an existing DNS alias record","examples":["nethserver.system.dns.editAlias({id: \"myalias.domain.org\", \"Description\": \"my third name\"}).then(function () {\n  // do something\n}, function (err) {\n   console.error(err);\n});"],"params":[{"type":{"names":["Object"]},"description":"DNS host name","name":"alias"},{"type":{"names":["string"]},"description":"Host name in FQDN format","name":"alias.key"},{"type":{"names":["string"]},"description":"Optional description","name":"alias.Description"}],"returns":[{"type":{"names":["Promise"]},"description":"A promise on succes, throws an error otherwise."}],"name":"editAlias","longname":"nethserver.system.dns.editAlias","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.editAlias"},{"comment":"/**\n         * Edit an existing DNS record pointing to an IP address\n         *\n         * @example\n         * nethserver.system.dns.editRemotHost({key: \"myhost.domain.org\", IpAddress: \"192.168.1.22\", Description: \"my PC\"}).then(function() {\n         *   // do something\n         * }, function (err) {\n         *    console.error(err);\n         * });\n         *\n         *\n         * @param {Object} host - DNS record to be added\n         * @param {string} host.key - Host name in FQDN format\n         * @param {string} host.IpAddress - Local or remote IP address\n         * @param {string} [host.Description] - Optional description\n         * @return {Promise} A promise on succes, throws an error otherwise.\n         */","meta":{"range":[7308,7397],"filename":"dns.js","lineno":229,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004630","name":"editRemoteHost","type":"FunctionExpression"}},"description":"Edit an existing DNS record pointing to an IP address","examples":["nethserver.system.dns.editRemotHost({key: \"myhost.domain.org\", IpAddress: \"192.168.1.22\", Description: \"my PC\"}).then(function() {\n  // do something\n}, function (err) {\n   console.error(err);\n});"],"params":[{"type":{"names":["Object"]},"description":"DNS record to be added","name":"host"},{"type":{"names":["string"]},"description":"Host name in FQDN format","name":"host.key"},{"type":{"names":["string"]},"description":"Local or remote IP address","name":"host.IpAddress"},{"type":{"names":["string"]},"optional":true,"description":"Optional description","name":"host.Description"}],"returns":[{"type":{"names":["Promise"]},"description":"A promise on succes, throws an error otherwise."}],"name":"editRemoteHost","longname":"nethserver.system.dns.editRemoteHost","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.editRemoteHost"},{"comment":"/**\n         * Return the alias host record associated to the given key\n         *\n         * @example\n         * // Record format\n         * {\n         *   key: \"myalias.domain.org\",\n         *   type: \"self\",\n         *   Description: \"My alias name\"\n         * }\n         *\n         * @param {String} hostKey - Host name to search\n         * @return {Promise.<Alias>} - If hostKey is found, return a promise with an alias record, throws an error otherwise.\n         */","meta":{"range":[5671,5750],"filename":"dns.js","lineno":186,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004613","name":"getAlias","type":"FunctionExpression"}},"description":"Return the alias host record associated to the given key","examples":["// Record format\n{\n  key: \"myalias.domain.org\",\n  type: \"self\",\n  Description: \"My alias name\"\n}"],"params":[{"type":{"names":["String"]},"description":"Host name to search","name":"hostKey"}],"returns":[{"type":{"names":["Promise.<Alias>"]},"description":"- If hostKey is found, return a promise with an alias record, throws an error otherwise."}],"name":"getAlias","longname":"nethserver.system.dns.getAlias","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.getAlias"},{"comment":"/**\n         * Return an array of DNS alias records.\n         * @see getNameAlias for record format\n         *\n         * @example\n         * var hosts = nethserver.system.dns.getAllNameAliases().then(function() {\n         *   // do something\n         * }, function (err) {\n         *    console.error(err);\n         * });\n\n         *\n         * @return {Promise.<Array>} - A promise with an array of DNS alias records\n         */","meta":{"range":[4467,4546],"filename":"dns.js","lineno":147,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004598","name":"getAllAliases","type":"FunctionExpression"}},"description":"Return an array of DNS alias records.","see":["getNameAlias for record format"],"examples":["var hosts = nethserver.system.dns.getAllNameAliases().then(function() {\n  // do something\n}, function (err) {\n   console.error(err);\n});"],"returns":[{"type":{"names":["Promise.<Array>"]},"description":"- A promise with an array of DNS alias records"}],"name":"getAllAliases","longname":"nethserver.system.dns.getAllAliases","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.getAllAliases"},{"comment":"/**\n         * Return an array of remote host records.\n         * @see getRemoteHost for record format\n         *\n         * @example\n         * var hosts = nethserver.system.dns.getAllRemoteHosts().then(function() {\n         *   // do something\n         * }, function (err) {\n         *    console.error(err);\n         * });\n\n         *\n         * @return {Promise.<Array>} - A promise with an array of remote host records\n         */","meta":{"range":[3932,4017],"filename":"dns.js","lineno":129,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004591","name":"getAllRemoteHosts","type":"FunctionExpression"}},"description":"Return an array of remote host records.","see":["getRemoteHost for record format"],"examples":["var hosts = nethserver.system.dns.getAllRemoteHosts().then(function() {\n  // do something\n}, function (err) {\n   console.error(err);\n});"],"returns":[{"type":{"names":["Promise.<Array>"]},"description":"- A promise with an array of remote host records"}],"name":"getAllRemoteHosts","longname":"nethserver.system.dns.getAllRemoteHosts","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.getAllRemoteHosts"},{"comment":"/**\n         * Get a list of configured upstream DNS servers: \"NameServers\" property inside \"dns\" key\n         *\n         * @example\n         * nethserver.system.dns.getDns().then(function (val) {\n         *   // do something with val\n         * }, function (err) {\n         *    console.error(err);\n         * });\n         *\n         * @param {Array} dnsServers - Array of DNS IP addresses\n         * @return {Promise.<Array>} On succes a promise with an array of DNS servers, throws an error otherwise.\n         */","meta":{"range":[12526,12784],"filename":"dns.js","lineno":377,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004816","name":"getDNS","type":"FunctionExpression"},"vars":{"db":"nethserver.system.dns.getDNS~db","":null}},"description":"Get a list of configured upstream DNS servers: \"NameServers\" property inside \"dns\" key","examples":["nethserver.system.dns.getDns().then(function (val) {\n  // do something with val\n}, function (err) {\n   console.error(err);\n});"],"params":[{"type":{"names":["Array"]},"description":"Array of DNS IP addresses","name":"dnsServers"}],"returns":[{"type":{"names":["Promise.<Array>"]},"description":"On succes a promise with an array of DNS servers, throws an error otherwise."}],"name":"getDNS","longname":"nethserver.system.dns.getDNS","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.getDNS"},{"comment":"/**\n         * Return the remote host record associated to the given key\n         *\n         * @example\n         * // Record format\n         * {\n         *   key: \"myhost.domain.org\",\n         *   type: \"remote\",\n         *   IpAddress: \"192.168.1.22\",\n         *   Description: \"My remote host\"\n         * }\n         *\n         * @param {String} hostKey - Host name to search\n         *\n         * @return {Promise.<Host>} - If hostKey is found, return a promise with a remote host record, throws an error otherwise.\n         */","meta":{"range":[5096,5180],"filename":"dns.js","lineno":168,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004605","name":"getRemoteHost","type":"FunctionExpression"}},"description":"Return the remote host record associated to the given key","examples":["// Record format\n{\n  key: \"myhost.domain.org\",\n  type: \"remote\",\n  IpAddress: \"192.168.1.22\",\n  Description: \"My remote host\"\n}"],"params":[{"type":{"names":["String"]},"description":"Host name to search","name":"hostKey"}],"returns":[{"type":{"names":["Promise.<Host>"]},"description":"- If hostKey is found, return a promise with a remote host record, throws an error otherwise."}],"name":"getRemoteHost","longname":"nethserver.system.dns.getRemoteHost","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.getRemoteHost"},{"comment":"/**\n         * Remove all 'self' records from 'hosts' db and replace it with given list\n         *\n         * Since all host-{delete,modify,edit} events are basically the same thing, thi API will\n         * always execute host-modify event.\n         *\n         * @example\n         * nethserver.system.dns.setAliases({[\"myalias.domain.org\",\"myalias2.domain2.org\"})\n         *\n         * @param {Array.<String>} aliases - Array of alias names\n         * @return {Promise} A promise on succes, throws an error otherwise.\n         */","meta":{"range":[8524,9276],"filename":"dns.js","lineno":263,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004647","name":"setAliases","type":"FunctionExpression"},"vars":{"db":"nethserver.system.dns.setAliases~db","":null}},"description":"Remove all 'self' records from 'hosts' db and replace it with given list\n\nSince all host-{delete,modify,edit} events are basically the same thing, thi API will\nalways execute host-modify event.","examples":["nethserver.system.dns.setAliases({[\"myalias.domain.org\",\"myalias2.domain2.org\"})"],"params":[{"type":{"names":["Array.<String>"]},"description":"Array of alias names","name":"aliases"}],"returns":[{"type":{"names":["Promise"]},"description":"A promise on succes, throws an error otherwise."}],"name":"setAliases","longname":"nethserver.system.dns.setAliases","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.setAliases"},{"comment":"/**\n         * Set upstream DNS servers by updating \"NameServers\" property inside \"dns\" key\n         *\n         * @example\n         * nethserver.system.dns.setDns(['1.2.3.4','5.6.7.8']).then(function () {\n         *   // do something\n         * }, function (err) {\n         *    console.error(err);\n         * });\n         *\n         *\n         * @param {Array} dnsServers - Array of DNS IP addresses\n         * @return {Promise} A promise on succes, throws an error otherwise.\n         */","meta":{"range":[11622,11990],"filename":"dns.js","lineno":354,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004766","name":"setDNS","type":"FunctionExpression"},"vars":{"db":"nethserver.system.dns.setDNS~db","":null}},"description":"Set upstream DNS servers by updating \"NameServers\" property inside \"dns\" key","examples":["nethserver.system.dns.setDns(['1.2.3.4','5.6.7.8']).then(function () {\n  // do something\n}, function (err) {\n   console.error(err);\n});"],"params":[{"type":{"names":["Array"]},"description":"Array of DNS IP addresses","name":"dnsServers"}],"returns":[{"type":{"names":["Promise"]},"description":"A promise on succes, throws an error otherwise."}],"name":"setDNS","longname":"nethserver.system.dns.setDNS","kind":"function","memberof":"nethserver.system.dns","scope":"static","$longname":"nethserver.system.dns.setDNS"},{"comment":"/**\n         * Get the host name domain part (FQDN without the first label)\n         *\n         * @return {Promise.<string>}\n         * @see {@link #getFQDN} {@link #getSystemName}\n         */","meta":{"range":[2687,2881],"filename":"hostname.js","lineno":80,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005003","name":"getDomainName","type":"FunctionExpression"},"vars":{"":null}},"description":"Get the host name domain part (FQDN without the first label)","returns":[{"type":{"names":["Promise.<string>"]}}],"see":["{@link #getFQDN} {@link #getSystemName}"],"name":"getDomainName","longname":"nethserver.system.hostname.getDomainName","kind":"function","memberof":"nethserver.system.hostname","scope":"static","$longname":"nethserver.system.hostname.getDomainName"},{"comment":"/**\n         * Retrieve the static host by reading /etc/hostname\n         * @return {Promise} Contents of file /etc/hostname\n         */","meta":{"range":[1108,1250],"filename":"hostname.js","lineno":35,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004878","name":"getFQDN","type":"FunctionExpression"}},"description":"Retrieve the static host by reading /etc/hostname","returns":[{"type":{"names":["Promise"]},"description":"Contents of file /etc/hostname"}],"name":"getFQDN","longname":"nethserver.system.hostname.getFQDN","kind":"function","memberof":"nethserver.system.hostname","scope":"static","$longname":"nethserver.system.hostname.getFQDN"},{"comment":"/**\n         * Get the short host name (FQDN without the domain suffix)\n         *\n         * @return {Promise.<string>}\n         * @see {@link #getFQDN} {@link #getDomainName}\n         */","meta":{"range":[2283,2476],"filename":"hostname.js","lineno":68,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004974","name":"getSystemName","type":"FunctionExpression"},"vars":{"":null}},"description":"Get the short host name (FQDN without the domain suffix)","returns":[{"type":{"names":["Promise.<string>"]}}],"see":["{@link #getFQDN} {@link #getDomainName}"],"name":"getSystemName","longname":"nethserver.system.hostname.getSystemName","kind":"function","memberof":"nethserver.system.hostname","scope":"static","$longname":"nethserver.system.hostname.getSystemName"},{"comment":"/**\n         * Set the system host name FQDN\n         *\n         * @param {String} hostname the new host name\n         * @return {Promise}\n         */","meta":{"range":[1419,2076],"filename":"hostname.js","lineno":44,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100004901","name":"setFQDN","type":"FunctionExpression"},"vars":{"client":"nethserver.system.hostname.setFQDN~client","":null}},"description":"Set the system host name FQDN","params":[{"type":{"names":["String"]},"description":"the new host name","name":"hostname"}],"returns":[{"type":{"names":["Promise"]}}],"name":"setFQDN","longname":"nethserver.system.hostname.setFQDN","kind":"function","memberof":"nethserver.system.hostname","scope":"static","$longname":"nethserver.system.hostname.setFQDN"},{"comment":"/**\n         * Retrieve information about the organization\n         *\n         * @return {Promise} - Resolves to an object representing the OrganizationContact record in \"configuration\" database\n         */","meta":{"range":[1191,1783],"filename":"organization.js","lineno":37,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005057","name":"getInfo","type":"FunctionExpression"},"vars":{"db":"nethserver.system.organization.getInfo~db","":null}},"description":"Retrieve information about the organization","returns":[{"type":{"names":["Promise"]},"description":"- Resolves to an object representing the OrganizationContact record in \"configuration\" database"}],"name":"getInfo","longname":"nethserver.system.organization.getInfo","kind":"function","memberof":"nethserver.system.organization","scope":"static","$longname":"nethserver.system.organization.getInfo"},{"comment":"/**\n         * Set information about the organization\n         *\n         * @param {Object} organization - The given object must have the same properties of the OrganizationContact record\n         * @return {Promise} - Saves the given\n         */","meta":{"range":[2048,2776],"filename":"organization.js","lineno":55,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005115","name":"saveInfo","type":"FunctionExpression"},"vars":{"db":"nethserver.system.organization.saveInfo~db","":null}},"description":"Set information about the organization","params":[{"type":{"names":["Object"]},"description":"The given object must have the same properties of the OrganizationContact record","name":"organization"}],"returns":[{"type":{"names":["Promise"]},"description":"- Saves the given"}],"name":"saveInfo","longname":"nethserver.system.organization.saveInfo","kind":"function","memberof":"nethserver.system.organization","scope":"static","$longname":"nethserver.system.organization.saveInfo"},{"comment":"/**\n         * Immediately shutdown the system: shutdown --poweroff now\n         *\n         * return {Promise} A cockpit promise\n         */","meta":{"range":[1527,1601],"filename":"power.js","lineno":51,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005261","name":"poweroff","type":"FunctionExpression"}},"description":"Immediately shutdown the system: shutdown --poweroff now\n\nreturn {Promise} A cockpit promise","name":"poweroff","longname":"nethserver.system.power.poweroff","kind":"function","memberof":"nethserver.system.power","scope":"static","$longname":"nethserver.system.power.poweroff"},{"comment":"/**\n         * Immediately reboot the system: `shutdown --reboot now`\n         *\n         * return {Promise} A cockpit promise\n         */","meta":{"range":[1297,1367],"filename":"power.js","lineno":42,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005254","name":"reboot","type":"FunctionExpression"}},"description":"Immediately reboot the system: `shutdown --reboot now`\n\nreturn {Promise} A cockpit promise","name":"reboot","longname":"nethserver.system.power.reboot","kind":"function","memberof":"nethserver.system.power","scope":"static","$longname":"nethserver.system.power.reboot"},{"comment":"/**\n * Function for Account providers\n *\n *\n * @namespace nethserver.system.provider\n */","meta":{"filename":"provider.js","lineno":21,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{}},"description":"Function for Account providers","kind":"namespace","name":"provider","memberof":"nethserver.system","longname":"nethserver.system.provider","scope":"static","$longname":"nethserver.system.provider","$members":[{"comment":"/**\n         * Set remote LDAP bind and execute nethserver-sssd-save event.\n         *\n         * @example\n         * nethserver.system.provider.bindRemoteLdap({\n         *   LdapUri: \"ldap://1.2.3.4\",\n         *   BindType: \"anonymous\",  // valid values: \"anonymous\" or  \"authenticated\"\n         *   BindDN: \"uid=user,dc=server,dc=org\",\n         *   BindPassword: \"mypass\",\n         *   BaseDN: \"dc=server,dc=org\",\n         *   UserDN: \"ou=Peopole,dc=server,dc=org\",\n         *   GroupDN: \"ou=Groups,dc=server,dc=org\",\n         *   StartTls: \"enabled\" // valid values: \"enabled\" or \"disabled\"\n         * });\n         *\n         * @param {Object} sssdConfig - SSSD configuration\n         *\n         * @return {Promise} - A promise on success, throws an error otherwise\n         */","meta":{"range":[4011,4920],"filename":"provider.js","lineno":112,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005423","name":"bindRemoteLdap","type":"FunctionExpression"},"vars":{"db":"nethserver.system.provider.bindRemoteLdap~db","":null}},"description":"Set remote LDAP bind and execute nethserver-sssd-save event.","examples":["nethserver.system.provider.bindRemoteLdap({\n  LdapUri: \"ldap://1.2.3.4\",\n  BindType: \"anonymous\",  // valid values: \"anonymous\" or  \"authenticated\"\n  BindDN: \"uid=user,dc=server,dc=org\",\n  BindPassword: \"mypass\",\n  BaseDN: \"dc=server,dc=org\",\n  UserDN: \"ou=Peopole,dc=server,dc=org\",\n  GroupDN: \"ou=Groups,dc=server,dc=org\",\n  StartTls: \"enabled\" // valid values: \"enabled\" or \"disabled\"\n});"],"params":[{"type":{"names":["Object"]},"description":"SSSD configuration","name":"sssdConfig"}],"returns":[{"type":{"names":["Promise"]},"description":"- A promise on success, throws an error otherwise"}],"name":"bindRemoteLdap","longname":"nethserver.system.provider.bindRemoteLdap","kind":"function","memberof":"nethserver.system.provider","scope":"static","$longname":"nethserver.system.provider.bindRemoteLdap"},{"comment":"/**\n         * Return the AD realm and workgroup\n         *\n         * @example\n         * nethserver.system.provider.getAdDefault().then(function(defaults) {\n         *   // defaults format\n         *   {\n         *      Realm: \"ad.mylocal.nethserver.org\",\n         *      Workgroup: \"MYLOCAL\"\n         *   }\n         * }\n         *\n         * @return {Promise.<Object>} - A promise containing realm and workgroup\n         * */","meta":{"range":[10032,10628],"filename":"provider.js","lineno":275,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005758","name":"getAdDefault","type":"FunctionExpression"},"vars":{"db":"nethserver.system.provider.getAdDefault~db","":null}},"description":"Return the AD realm and workgroup","examples":["nethserver.system.provider.getAdDefault().then(function(defaults) {\n  // defaults format\n  {\n     Realm: \"ad.mylocal.nethserver.org\",\n     Workgroup: \"MYLOCAL\"\n  }\n}"],"returns":[{"type":{"names":["Promise.<Object>"]},"description":"- A promise containing realm and workgroup"}],"name":"getAdDefault","longname":"nethserver.system.provider.getAdDefault","kind":"function","memberof":"nethserver.system.provider","scope":"static","$longname":"nethserver.system.provider.getAdDefault"},{"comment":"/**\n         * Return JSON output from \"account-provider-test dump\"\n         *\n         * @return {Object} - A JSON object with provider information\n         */","meta":{"range":[12888,13121],"filename":"provider.js","lineno":351,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005999","name":"getInfo","type":"FunctionExpression"},"vars":{"":null}},"description":"Return JSON output from \"account-provider-test dump\"","returns":[{"type":{"names":["Object"]},"description":"- A JSON object with provider information"}],"name":"getInfo","longname":"nethserver.system.provider.getInfo","kind":"function","memberof":"nethserver.system.provider","scope":"static","$longname":"nethserver.system.provider.getInfo"},{"comment":"/**\n         * Install local Active Directory Samba container\n         *\n         * @example\n         * nethserver.system.provider.installLocalAd({\n         *     Realm: \"ad.mylocal.nethserver.org\",\n         *     Workgroup: \"MYLOCAL\",\n         *     IpAddress: \"192.168.3.22\"\n         * })\n         *\n         *\n         * @param {Object} adConfig - Configuration of the AD\n         *\n         * @return {Promise} - A promise on success, throws an error otherwise\n         */","meta":{"range":[11125,12708],"filename":"provider.js","lineno":304,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005846","name":"installLocalAd","type":"FunctionExpression"},"vars":{"realmValidator":"nethserver.system.provider.installLocalAd~realmValidator","ipValidator":"nethserver.system.provider.installLocalAd~ipValidator","db":"nethserver.system.provider.installLocalAd~db","":null}},"description":"Install local Active Directory Samba container","examples":["nethserver.system.provider.installLocalAd({\n    Realm: \"ad.mylocal.nethserver.org\",\n    Workgroup: \"MYLOCAL\",\n    IpAddress: \"192.168.3.22\"\n})"],"params":[{"type":{"names":["Object"]},"description":"Configuration of the AD","name":"adConfig"}],"returns":[{"type":{"names":["Promise"]},"description":"- A promise on success, throws an error otherwise"}],"name":"installLocalAd","longname":"nethserver.system.provider.installLocalAd","kind":"function","memberof":"nethserver.system.provider","scope":"static","$longname":"nethserver.system.provider.installLocalAd"},{"comment":"/**\n         * Install OpenLDAP locally.\n         *\n         * @return {Promise} - A process promise\n         */","meta":{"range":[5052,5264],"filename":"provider.js","lineno":140,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005520","name":"installLocalLdap","type":"FunctionExpression"}},"description":"Install OpenLDAP locally.","returns":[{"type":{"names":["Promise"]},"description":"- A process promise"}],"name":"installLocalLdap","longname":"nethserver.system.provider.installLocalLdap","kind":"function","memberof":"nethserver.system.provider","scope":"static","$longname":"nethserver.system.provider.installLocalLdap"},{"comment":"/**\n         * Join an Active Directory domain\n         *\n         * @example\n         * nethserver.system.provider.joinDomain( { Realm: \"ad.nethesis.it\", BindUser: \"Administrator\", BindPassword: \"Nethesis,1234\", AdDns: \"1.2.3.4\" } )\n         *\n         * @param {Object} adConfig - AD configuration\n         *\n         * @return {Promise} - A promise on success, throws an error otherwise\n         */","meta":{"range":[7881,9583],"filename":"provider.js","lineno":216,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005635","name":"joinDomain","type":"FunctionExpression"},"vars":{"db":"nethserver.system.provider.joinDomain~db","":null}},"description":"Join an Active Directory domain","examples":["nethserver.system.provider.joinDomain( { Realm: \"ad.nethesis.it\", BindUser: \"Administrator\", BindPassword: \"Nethesis,1234\", AdDns: \"1.2.3.4\" } )"],"params":[{"type":{"names":["Object"]},"description":"AD configuration","name":"adConfig"}],"returns":[{"type":{"names":["Promise"]},"description":"- A promise on success, throws an error otherwise"}],"name":"joinDomain","longname":"nethserver.system.provider.joinDomain","kind":"function","memberof":"nethserver.system.provider","scope":"static","$longname":"nethserver.system.provider.joinDomain"},{"comment":"/**\n         * Probe the given host for AD configuration using DNS query\n         *\n         * @example\n         * nethserver.system.provider.probeAd('1.2.3.4', '4.5.6.7').then(function(config) {\n         * //Output config\n         *   {\n         *      \"BindDN\" : \"WORKGROUP\\\\TEST$\",\n         *      \"LdapURI\" : \"ldap://nsdc-neths8f6cf.ad.nethserver.org\",\n         *      \"StartTls\" : \"disabled\",\n         *      \"BindType\" : \"anonymous\",\n         *      \"UserDN\" : \"DC=ad,DC=nethserver,DC=org\",\n         *      \"GroupDN\" : \"DC=ad,DC=nethserver,DC=org\",\n         *      \"Realm\" : \"AD.NETHSERVER.ORG,\n         *      \"BindPassword\" : \"\",\n         *      \"LdapUriDn\" : \"ldap:///dc%3Dad%2Cdc%3Dnethserver%2Cdc%3Dorg\",\n         *      \"BaseDN\" : \"DC=ad,DC=nethserver,DC=org\"\n         *   }\n         *\n         *   config.BindPassword = 'mypass';\n         *   joinAd(config);\n         * })\n         *\n         *\n         * @param {String} domainName - AD domain to search\n         * @param {String} [adDns] - Address of DNS server, leave blank to use system default\n         *\n         * @return {Promise} - A promise with AD configuration for SSSD\n         */","meta":{"range":[6730,7460],"filename":"provider.js","lineno":184,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005543","name":"probeAd","type":"FunctionExpression"},"vars":{"dns":"nethserver.system.provider.probeAd~dns","":null}},"description":"Probe the given host for AD configuration using DNS query","examples":["nethserver.system.provider.probeAd('1.2.3.4', '4.5.6.7').then(function(config) {\n//Output config\n  {\n     \"BindDN\" : \"WORKGROUP\\\\TEST$\",\n     \"LdapURI\" : \"ldap://nsdc-neths8f6cf.ad.nethserver.org\",\n     \"StartTls\" : \"disabled\",\n     \"BindType\" : \"anonymous\",\n     \"UserDN\" : \"DC=ad,DC=nethserver,DC=org\",\n     \"GroupDN\" : \"DC=ad,DC=nethserver,DC=org\",\n     \"Realm\" : \"AD.NETHSERVER.ORG,\n     \"BindPassword\" : \"\",\n     \"LdapUriDn\" : \"ldap:///dc%3Dad%2Cdc%3Dnethserver%2Cdc%3Dorg\",\n     \"BaseDN\" : \"DC=ad,DC=nethserver,DC=org\"\n  }\n\n  config.BindPassword = 'mypass';\n  joinAd(config);\n})"],"params":[{"type":{"names":["String"]},"description":"AD domain to search","name":"domainName"},{"type":{"names":["String"]},"optional":true,"description":"Address of DNS server, leave blank to use system default","name":"adDns"}],"returns":[{"type":{"names":["Promise"]},"description":"- A promise with AD configuration for SSSD"}],"name":"probeAd","longname":"nethserver.system.provider.probeAd","kind":"function","memberof":"nethserver.system.provider","scope":"static","$longname":"nethserver.system.provider.probeAd"},{"comment":"/**\n         * Probe LDAP configuration\n         *\n         * @example\n         * nethserver.system.provider.probeLdap('1.2.3.4').then(function(config) {\n         * //Output config\n         *   {\n         *      \"BindDN\" : \"\",\n         *      \"LdapURI\" : \"ldap://1.2.3.4:389\",\n         *      \"StartTls\" : \"enabled\",\n         *      \"BindType\" : \"anonymous\",\n         *      \"UserDN\" : \"ou=People,dc=directory,dc=nh\",\n         *      \"GroupDN\" : \"ou=Groups,dc=directory,dc=nh\",\n         *      \"BindPassword\" : \"\",\n         *      \"LdapUriDn\" : \"ldap:///dc%3Dlocal%2Cdc%3Dneth%2Cdc%3Deu\",\n         *      \"BaseDN\" : \"dc=directory,dc=nh\"\n         *   }\n         * })\n         *\n         * @param {String} host - LDAP host to contact\n         * @param {Integer} [port] - LDAP port, default is 389\n         *\n         * @return {Promise} - A promise with a SSSD configuration on success, throws an error otherwise.\n         * Errors: 'NotValid' if the host is unreachable, 'RuntimeError' if the host is not a valid LDAP server\n         */","meta":{"range":[2048,3211],"filename":"provider.js","lineno":61,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005292","name":"probeLdap","type":"FunctionExpression"},"vars":{"p":"nethserver.system.provider.probeLdap~p","":null}},"description":"Probe LDAP configuration","examples":["nethserver.system.provider.probeLdap('1.2.3.4').then(function(config) {\n//Output config\n  {\n     \"BindDN\" : \"\",\n     \"LdapURI\" : \"ldap://1.2.3.4:389\",\n     \"StartTls\" : \"enabled\",\n     \"BindType\" : \"anonymous\",\n     \"UserDN\" : \"ou=People,dc=directory,dc=nh\",\n     \"GroupDN\" : \"ou=Groups,dc=directory,dc=nh\",\n     \"BindPassword\" : \"\",\n     \"LdapUriDn\" : \"ldap:///dc%3Dlocal%2Cdc%3Dneth%2Cdc%3Deu\",\n     \"BaseDN\" : \"dc=directory,dc=nh\"\n  }\n})"],"params":[{"type":{"names":["String"]},"description":"LDAP host to contact","name":"host"},{"type":{"names":["Integer"]},"optional":true,"description":"LDAP port, default is 389","name":"port"}],"returns":[{"type":{"names":["Promise"]},"description":"- A promise with a SSSD configuration on success, throws an error otherwise.\nErrors: 'NotValid' if the host is unreachable, 'RuntimeError' if the host is not a valid LDAP server"}],"name":"probeLdap","longname":"nethserver.system.provider.probeLdap","kind":"function","memberof":"nethserver.system.provider","scope":"static","$longname":"nethserver.system.provider.probeLdap"},{"comment":"/**\n         * Uninstall local provider by executing \"nethserver-sssd-remove-provider\" event.\n         *\n         * @return {Promise} - A signal-event promise\n         */","meta":{"range":[5454,5554],"filename":"provider.js","lineno":151,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100005536","name":"uninstall","type":"FunctionExpression"}},"description":"Uninstall local provider by executing \"nethserver-sssd-remove-provider\" event.","returns":[{"type":{"names":["Promise"]},"description":"- A signal-event promise"}],"name":"uninstall","longname":"nethserver.system.provider.uninstall","kind":"function","memberof":"nethserver.system.provider","scope":"static","$longname":"nethserver.system.provider.uninstall"}]},{"comment":"/**\n         * Enable the given service\n         *\n         * @param {String} service - Service name\n         * @return {Promise} a Cockpit promise\n         */","meta":{"range":[2590,2743],"filename":"services.js","lineno":85,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006089","name":"disableService","type":"FunctionExpression"}},"description":"Enable the given service","params":[{"type":{"names":["String"]},"description":"Service name","name":"service"}],"returns":[{"type":{"names":["Promise"]},"description":"a Cockpit promise"}],"name":"disableService","longname":"nethserver.system.services.disableService","kind":"function","memberof":"nethserver.system.services","scope":"static","$longname":"nethserver.system.services.disableService"},{"comment":"/**\n         * Enable the given service\n         *\n         * @param {String} service - Service name\n         * @return {Promise} a Cockpit promise\n         */","meta":{"range":[2260,2411],"filename":"services.js","lineno":75,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006076","name":"enableService","type":"FunctionExpression"}},"description":"Enable the given service","params":[{"type":{"names":["String"]},"description":"Service name","name":"service"}],"returns":[{"type":{"names":["Promise"]},"description":"a Cockpit promise"}],"name":"enableService","longname":"nethserver.system.services.enableService","kind":"function","memberof":"nethserver.system.services","scope":"static","$longname":"nethserver.system.services.enableService"},{"comment":"/**\n         * Return the list of services\n         *\n         * @example\n         * nethserver.system.services.getAllServices().then(function(services) {\n         *     // services format\n         *     [\n         *       ...\n         *       {\n         *         \"description\": \"DNS caching server.\",\n         *         \"name\": \"dnsmasq\",\n         *         \"ports\": {\n         *           \"TCP\": [ \"53\", \"67\" ]\n         *           \"UDP\": [ \"53\", \"67\", \"69\" ]\n         *         },\n         *         \"props\": {\n         *           ...\n         *           \"access\": \"green\",\n         *           \"dhcp-boot\": \"\",\n         *           ...\n         *         },\n         *         \"running\": 1,\n         *         \"status\": 1\n         *     },\n         *     ...\n         *   ]\n         *\n         * @return {Promise} a promise with the list of services\n         *\n        */","meta":{"range":[1834,2081],"filename":"services.js","lineno":61,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006050","name":"getAllServices","type":"FunctionExpression"},"vars":{"":null}},"description":"Return the list of services","examples":["nethserver.system.services.getAllServices().then(function(services) {\n    // services format\n    [\n      ...\n      {\n        \"description\": \"DNS caching server.\",\n        \"name\": \"dnsmasq\",\n        \"ports\": {\n          \"TCP\": [ \"53\", \"67\" ]\n          \"UDP\": [ \"53\", \"67\", \"69\" ]\n        },\n        \"props\": {\n          ...\n          \"access\": \"green\",\n          \"dhcp-boot\": \"\",\n          ...\n        },\n        \"running\": 1,\n        \"status\": 1\n    },\n    ...\n  ]"],"returns":[{"type":{"names":["Promise"]},"description":"a promise with the list of services"}],"name":"getAllServices","longname":"nethserver.system.services.getAllServices","kind":"function","memberof":"nethserver.system.services","scope":"static","$longname":"nethserver.system.services.getAllServices"},{"comment":"/**\n         * Restart the given service\n         *\n         * @param {String} service - Service name\n         * @return {Promise} a Cockpit promise\n         */","meta":{"range":[3574,3727],"filename":"services.js","lineno":115,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006128","name":"restartService","type":"FunctionExpression"}},"description":"Restart the given service","params":[{"type":{"names":["String"]},"description":"Service name","name":"service"}],"returns":[{"type":{"names":["Promise"]},"description":"a Cockpit promise"}],"name":"restartService","longname":"nethserver.system.services.restartService","kind":"function","memberof":"nethserver.system.services","scope":"static","$longname":"nethserver.system.services.restartService"},{"comment":"/**\n         * Start the given service\n         *\n         * @param {String} service - Service name\n         * @return {Promise} a Cockpit promise\n         */","meta":{"range":[2921,3070],"filename":"services.js","lineno":95,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006102","name":"startService","type":"FunctionExpression"}},"description":"Start the given service","params":[{"type":{"names":["String"]},"description":"Service name","name":"service"}],"returns":[{"type":{"names":["Promise"]},"description":"a Cockpit promise"}],"name":"startService","longname":"nethserver.system.services.startService","kind":"function","memberof":"nethserver.system.services","scope":"static","$longname":"nethserver.system.services.startService"},{"comment":"/**\n         * Stop the given service\n         *\n         * @param {String} service - Service name\n         * @return {Promise} a Cockpit promise\n         */","meta":{"range":[3247,3394],"filename":"services.js","lineno":105,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006115","name":"stopService","type":"FunctionExpression"}},"description":"Stop the given service","params":[{"type":{"names":["String"]},"description":"Service name","name":"service"}],"returns":[{"type":{"names":["Promise"]},"description":"a Cockpit promise"}],"name":"stopService","longname":"nethserver.system.services.stopService","kind":"function","memberof":"nethserver.system.services","scope":"static","$longname":"nethserver.system.services.stopService"},{"comment":"/**\n         * Retrieve the static host by reading /etc/hostname\n         * @deprecated\n         * @return {Promise}\n         */","meta":{"range":[1097,1136],"filename":"summary.js","lineno":36,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006165","name":"getHostname","type":"MemberExpression","value":"ns.system.hostname.getFQDN"}},"description":"Retrieve the static host by reading /etc/hostname","deprecated":true,"returns":[{"type":{"names":["Promise"]}}],"name":"getHostname","longname":"nethserver.system.summary.getHostname","kind":"member","memberof":"nethserver.system.summary","scope":"static","$longname":"nethserver.system.summary.getHostname"},{"comment":"/**\n         * Set the system host name\n         * @deprecated\n         * @param {String} hostname the new host name\n         * @param {Bool} [runEvent=true] signalEvent(hostname-modify)\n         * @return {Promise}\n         */","meta":{"range":[1383,1422],"filename":"summary.js","lineno":45,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006173","name":"setHostname","type":"MemberExpression","value":"ns.system.hostname.setFQDN"}},"description":"Set the system host name","deprecated":true,"params":[{"type":{"names":["String"]},"description":"the new host name","name":"hostname"},{"type":{"names":["Bool"]},"optional":true,"defaultvalue":true,"description":"signalEvent(hostname-modify)","name":"runEvent"}],"returns":[{"type":{"names":["Promise"]}}],"name":"setHostname","longname":"nethserver.system.summary.setHostname","kind":"member","memberof":"nethserver.system.summary","scope":"static","$longname":"nethserver.system.summary.setHostname"},{"comment":"/**\n         * Create a new group\n         *\n         * @example\n         * nethserver.system.users.createGroup({ key: 'mynewgroup', 'members': ['user1', 'user2', .. ] }).then(function() {\n         *   ...\n         * });\n         *\n         * @param {Object} group - Group to be added\n         *\n         * @return {Promise} - A promise on success, throws an error otherwise\n         */","meta":{"range":[5398,6205],"filename":"users.js","lineno":166,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006487","name":"addGroup","type":"FunctionExpression"},"vars":{"":null}},"description":"Create a new group","examples":["nethserver.system.users.createGroup({ key: 'mynewgroup', 'members': ['user1', 'user2', .. ] }).then(function() {\n  ...\n});"],"params":[{"type":{"names":["Object"]},"description":"Group to be added","name":"group"}],"returns":[{"type":{"names":["Promise"]},"description":"- A promise on success, throws an error otherwise"}],"name":"addGroup","longname":"nethserver.system.users.addGroup","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.addGroup"},{"comment":"/**\n         * Crate a new user\n         *\n         * @example\n         * nethserver.system.users.addUser({\n         *     \"myuser\": {\n         *         \"expires\": \"no\",\n         *         \"gecos\": \"Name Surname\",\n         *         \"password\": \"mypassword\",\n         *         \"shell\": \"/bin/false\"\n         *     }\n         * }).then(function() {\n         *    nethserver.system.users.setPassword('username', 'password')\n         * }\n         *\n         * @param {Object} user - User to be added\n         *\n         * @return {Promise} - A promise on success, throws an error otherwise\n         */","meta":{"range":[9217,10618],"filename":"users.js","lineno":280,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006722","name":"addUser","type":"FunctionExpression"},"vars":{"":null}},"description":"Crate a new user","examples":["nethserver.system.users.addUser({\n    \"myuser\": {\n        \"expires\": \"no\",\n        \"gecos\": \"Name Surname\",\n        \"password\": \"mypassword\",\n        \"shell\": \"/bin/false\"\n    }\n}).then(function() {\n   nethserver.system.users.setPassword('username', 'password')\n}"],"params":[{"type":{"names":["Object"]},"description":"User to be added","name":"user"}],"returns":[{"type":{"names":["Promise"]},"description":"- A promise on success, throws an error otherwise"}],"name":"addUser","longname":"nethserver.system.users.addUser","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.addUser"},{"comment":"/**\n         * Delete an existing group\n         *\n         * @example\n         * nethserver.system.users.deleteGroup('mynewgroup').then(function() {\n         *   ...\n         * });\n         *\n         * @param {String} group - Group to be deleted\n         *\n         * @return {Promise} - A promise on success, throws an error otherwise\n         */","meta":{"range":[7871,8597],"filename":"users.js","lineno":239,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006657","name":"deleteGroup","type":"FunctionExpression"},"vars":{"":null}},"description":"Delete an existing group","examples":["nethserver.system.users.deleteGroup('mynewgroup').then(function() {\n  ...\n});"],"params":[{"type":{"names":["String"]},"description":"Group to be deleted","name":"group"}],"returns":[{"type":{"names":["Promise"]},"description":"- A promise on success, throws an error otherwise"}],"name":"deleteGroup","longname":"nethserver.system.users.deleteGroup","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.deleteGroup"},{"comment":"/**\n         * Delete an existing user\n         *\n         * @example\n         * nethserver.system.users.deleteUser('myuser').then(function() {\n         *   ...\n         * });\n         *\n         * @param {String} user - User to be deleted\n         *\n         * @return {Promise} - A promise on success, throws an error otherwise\n         */","meta":{"range":[11522,12068],"filename":"users.js","lineno":347,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006880","name":"deleteUser","type":"FunctionExpression"},"vars":{"":null}},"description":"Delete an existing user","examples":["nethserver.system.users.deleteUser('myuser').then(function() {\n  ...\n});"],"params":[{"type":{"names":["String"]},"description":"User to be deleted","name":"user"}],"returns":[{"type":{"names":["Promise"]},"description":"- A promise on success, throws an error otherwise"}],"name":"deleteUser","longname":"nethserver.system.users.deleteUser","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.deleteUser"},{"comment":"/**\n         * Edit an existing group\n         *\n         * @example\n         * nethserver.system.users.editGroup({ key: 'mynewgroup', 'members': ['user1', 'user2', .. ] }).then(function() {\n         *   ...\n         * });\n         *\n         * @param {Object} group - Group to be modified\n         *\n         * @return {Promise} - A promise on success, throws an error otherwise\n         */","meta":{"range":[6617,7502],"filename":"users.js","lineno":201,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006566","name":"editGroup","type":"FunctionExpression"},"vars":{"":null}},"description":"Edit an existing group","examples":["nethserver.system.users.editGroup({ key: 'mynewgroup', 'members': ['user1', 'user2', .. ] }).then(function() {\n  ...\n});"],"params":[{"type":{"names":["Object"]},"description":"Group to be modified","name":"group"}],"returns":[{"type":{"names":["Promise"]},"description":"- A promise on success, throws an error otherwise"}],"name":"editGroup","longname":"nethserver.system.users.editGroup","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.editGroup"},{"comment":"/**\n         * Get user list of the given group\n         *\n         * @example\n         * nethserver.system.users.getUser(mygroup).then(function(users) {\n         *    // print users of th group\n         * });\n         * //Output:\n         * [\"user1\",\"user2\", ..]\n         *\n         * @param {String} group - Name of the group\n         * @param {Integer} [timeout] - Script timeout, default to 5 seconds\n         *\n         * @return {Promise.<Array>} - A standard promise with the list of users\n         */","meta":{"range":[4677,4992],"filename":"users.js","lineno":145,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006449","name":"getGroupMembers","type":"FunctionExpression"},"vars":{"t":"nethserver.system.users.getGroupMembers~t","":null}},"description":"Get user list of the given group","examples":["nethserver.system.users.getUser(mygroup).then(function(users) {\n   // print users of th group\n});\n//Output:\n[\"user1\",\"user2\", ..]"],"params":[{"type":{"names":["String"]},"description":"Name of the group","name":"group"},{"type":{"names":["Integer"]},"optional":true,"description":"Script timeout, default to 5 seconds","name":"timeout"}],"returns":[{"type":{"names":["Promise.<Array>"]},"description":"- A standard promise with the list of users"}],"name":"getGroupMembers","longname":"nethserver.system.users.getGroupMembers","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.getGroupMembers"},{"comment":"/**\n         * Get the list of groups\n         * @see {@link #getGroup} for output format\n         *\n         * @example\n         * nethserver.system.users.getGroups().then(function(groups) {\n         *    // print grpups\n         * });\n         *\n         * @param {Integer} [timeout] - Script timeout, default to 5 seconds\n         *\n         * @return {Promise} - A standard promise with the list of groups\n         */","meta":{"range":[3861,4149],"filename":"users.js","lineno":121,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006413","name":"getGroups","type":"FunctionExpression"},"vars":{"t":"nethserver.system.users.getGroups~t","":null}},"description":"Get the list of groups","see":["{@link #getGroup} for output format"],"examples":["nethserver.system.users.getGroups().then(function(groups) {\n   // print grpups\n});"],"params":[{"type":{"names":["Integer"]},"optional":true,"description":"Script timeout, default to 5 seconds","name":"timeout"}],"returns":[{"type":{"names":["Promise"]},"description":"- A standard promise with the list of groups"}],"name":"getGroups","longname":"nethserver.system.users.getGroups","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.getGroups"},{"comment":"/**\n         * Get information on the given user\n         *\n         * @example\n         * nethserver.system.users.getUser(myuser).then(function(user) {\n         *    // print user\n         * });\n         * //Output:\n         * {\n         *     \"myuser\": {\n         *         \"expired\": 0,\n         *         \"expires\": \"no\",\n         *         \"gecos\": \"Name Surname\",\n         *         \"locked\": 0,\n         *         \"new\": 0,\n         *         \"shell\": \"/bin/false\"\n         *     }\n         * }\n         *\n         * @param {String} user - Name of the user\n         * @param {Integer} [timeout] - Script timeout, default to 5 seconds\n         *\n         * @return {Promise.<User>} - A standard promise with the given user\n         */","meta":{"range":[2411,2708],"filename":"users.js","lineno":77,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006346","name":"getUser","type":"FunctionExpression"},"vars":{"t":"nethserver.system.users.getUser~t","":null}},"description":"Get information on the given user","examples":["nethserver.system.users.getUser(myuser).then(function(user) {\n   // print user\n});\n//Output:\n{\n    \"myuser\": {\n        \"expired\": 0,\n        \"expires\": \"no\",\n        \"gecos\": \"Name Surname\",\n        \"locked\": 0,\n        \"new\": 0,\n        \"shell\": \"/bin/false\"\n    }\n}"],"params":[{"type":{"names":["String"]},"description":"Name of the user","name":"user"},{"type":{"names":["Integer"]},"optional":true,"description":"Script timeout, default to 5 seconds","name":"timeout"}],"returns":[{"type":{"names":["Promise.<User>"]},"description":"- A standard promise with the given user"}],"name":"getUser","longname":"nethserver.system.users.getUser","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.getUser"},{"comment":"/**\n         * Get list of groups for the given user\n         *\n         * @example\n         * nethserver.system.users.getUserMembership(myuser).then(function(groups) {\n         *    // print groups\n         * });\n         * //Output\n         * [ 'g1', 'g2' ... ]\n         *\n         * @param {String} user - Name of the user\n         *\n         * @return {Promise.<Array>} - A standard promise with a list of groups\n         */","meta":{"range":[3156,3420],"filename":"users.js","lineno":100,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006384","name":"getUserMembership","type":"FunctionExpression"},"vars":{"":null}},"description":"Get list of groups for the given user","examples":["nethserver.system.users.getUserMembership(myuser).then(function(groups) {\n   // print groups\n});\n//Output\n[ 'g1', 'g2' ... ]"],"params":[{"type":{"names":["String"]},"description":"Name of the user","name":"user"}],"returns":[{"type":{"names":["Promise.<Array>"]},"description":"- A standard promise with a list of groups"}],"name":"getUserMembership","longname":"nethserver.system.users.getUserMembership","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.getUserMembership"},{"comment":"/**\n         * Get the list of users\n         * @see {@link #getUser} for output format\n         *\n         * @example\n         * nethserver.system.users.getUsers().then(function(users) {\n         *    // print users\n         * });\n         *\n         * @param {Integer} [timeout] - Script timeout, default to 5 seconds\n         *\n         * @return {Promise} - A standard promise with the list of users\n         */","meta":{"range":[1365,1651],"filename":"users.js","lineno":44,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006310","name":"getUsers","type":"FunctionExpression"},"vars":{"t":"nethserver.system.users.getUsers~t","":null}},"description":"Get the list of users","see":["{@link #getUser} for output format"],"examples":["nethserver.system.users.getUsers().then(function(users) {\n   // print users\n});"],"params":[{"type":{"names":["Integer"]},"optional":true,"description":"Script timeout, default to 5 seconds","name":"timeout"}],"returns":[{"type":{"names":["Promise"]},"description":"- A standard promise with the list of users"}],"name":"getUsers","longname":"nethserver.system.users.getUsers","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.getUsers"},{"comment":"/**\n         * Generate a srong random password using mkpasswd\n         *\n         * @return {String} - A random strong password\n         */","meta":{"range":[12229,12356],"filename":"users.js","lineno":369,"columnno":8,"path":"/home/davidep/nethserver/nethserver-cockpit/api/system","code":{"id":"astnode100006930","name":"mkpasswd","type":"FunctionExpression"}},"description":"Generate a srong random password using mkpasswd","returns":[{"type":{"names":["String"]},"description":"- A random strong password"}],"name":"mkpasswd","longname":"nethserver.system.users.mkpasswd","kind":"function","memberof":"nethserver.system.users","scope":"static","$longname":"nethserver.system.users.mkpasswd"},{"comment":"/**\n     * Launch the \"validate\" command. The exit code can be:\n     * <ul>\n     * <li> 0 - success\n     * <li> 1 - generic failure condition\n     * <li> N - specific error code\n     * </ul>\n     *\n     * @function\n     * @name nethserver.validate\n     * @param {String} validator - Validation procedure name\n     * @param {Array} args - Arguments to validation procedure\n     * @param {Object} ex - Object thrown if validation fails as nethserver.Error object\n     * @return {Promise.<Array>} - args itself\n     * @see {@link #nethserver.Error}\n     * @example\n     * var validatorPromise = ns.validate('rsa-key', [keyFile], {\n     *     id: 1508163908911,\n     *     type: 'NotValid',\n     *     attributes: {'privateKey': 'Invalid PEM-encoded RSA key'},\n     * });\n     */","meta":{"filename":"validate.js","lineno":28,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"Launch the \"validate\" command. The exit code can be:\n<ul>\n<li> 0 - success\n<li> 1 - generic failure condition\n<li> N - specific error code\n</ul>","kind":"function","name":"validate","params":[{"type":{"names":["String"]},"description":"Validation procedure name","name":"validator"},{"type":{"names":["Array"]},"description":"Arguments to validation procedure","name":"args"},{"type":{"names":["Object"]},"description":"Object thrown if validation fails as nethserver.Error object","name":"ex"}],"returns":[{"type":{"names":["Promise.<Array>"]},"description":"- args itself"}],"see":["{@link #nethserver.Error}"],"examples":["var validatorPromise = ns.validate('rsa-key', [keyFile], {\n    id: 1508163908911,\n    type: 'NotValid',\n    attributes: {'privateKey': 'Invalid PEM-encoded RSA key'},\n});"],"memberof":"nethserver","longname":"nethserver.validate","scope":"static","$longname":"nethserver.validate"},{"comment":"/**\n     * Resolve all given validator promises in parallel catching \"NotValid\" errors.\n     *\n     * @name nethserver.validateAll\n     * @param {Array} validators - Each element of the array is resolved as a Promise\n     * @returns {Promise} - The failure handler receives a nethserver.Error instance representing the failed validators.\n     * @see {@link #nethserver.Error} {@link #nethserver.validate}\n     * @example\n     * validateAll([v1, v2, v3]); // v1, v2, v3 could be returned by nethserver.validate()\n     */","meta":{"filename":"validate.js","lineno":72,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"Resolve all given validator promises in parallel catching \"NotValid\" errors.","name":"validateAll","params":[{"type":{"names":["Array"]},"description":"Each element of the array is resolved as a Promise","name":"validators"}],"returns":[{"type":{"names":["Promise"]},"description":"- The failure handler receives a nethserver.Error instance representing the failed validators."}],"see":["{@link #nethserver.Error} {@link #nethserver.validate}"],"examples":["validateAll([v1, v2, v3]); // v1, v2, v3 could be returned by nethserver.validate()"],"memberof":"nethserver","longname":"nethserver.validateAll","scope":"static","kind":"member","$longname":"nethserver.validateAll"},{"comment":"/**\n     * An object of type TaskProgress is attached to a CustomEvent as \"detail\"\n     *\n     * @typedef {Object} Notification\n     * @param {string} title the title of notification\n     * @param {string} message the message of notification\n     * @param {string} status the status of notification (info|danger|success|warning)\n     * @param {string} action the label of action, es. \"Restart\"\n     * @param {Function} method the method to invoke\n     * @param {string} [type=\"info\"] the type of notification, (info|action)\n     *\n     */","meta":{"filename":"notification.js","lineno":28,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"An object of type TaskProgress is attached to a CustomEvent as \"detail\"","kind":"typedef","name":"Notification","type":{"names":["Object"]},"params":[{"type":{"names":["string"]},"description":"the title of notification","name":"title"},{"type":{"names":["string"]},"description":"the message of notification","name":"message"},{"type":{"names":["string"]},"description":"the status of notification (info|danger|success|warning)","name":"status"},{"type":{"names":["string"]},"description":"the label of action, es. \"Restart\"","name":"action"},{"type":{"names":["function"]},"description":"the method to invoke","name":"method"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"\"info\"","description":"the type of notification, (info|action)","name":"type"}],"longname":"Notification","scope":"global","$longname":"Notification"},{"comment":"/**\n * A nethserver database instance\n * @see {@link #nethserver.getDatabase}\n * @class\n * @name Nsdb\n * @protected\n */","meta":{"filename":"db.js","lineno":224,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"A nethserver database instance","see":["{@link #nethserver.getDatabase}"],"kind":"class","name":"Nsdb","access":"protected","longname":"Nsdb","scope":"global","$longname":"Nsdb"},{"comment":"/**\n     * Delete the given key\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * db.delete('OrganizationContact');\n     *\n     * @param {String} key - Key name\n     * @return {Object} the DB object itself\n     */","meta":{"range":[13458,13569],"filename":"db.js","lineno":520,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100001042","name":"delete","type":"FunctionExpression"},"vars":{"this.modified":"<anonymous>~Nsdb#delete#modified"}},"description":"Delete the given key","examples":["var db = nethserver.getDatabase('configuration');\ndb.delete('OrganizationContact');"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"}],"returns":[{"type":{"names":["Object"]},"description":"the DB object itself"}],"name":"delete","longname":"<anonymous>~Nsdb#delete","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#delete"},{"comment":"/**\n     * Delete selected prop inside given key\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * db.delProp('OrganizationContact','City');\n     *\n     * @param {String} key - Key name\n     * @param {String} prop - Property name\n     * @return {Object} the DB object itself\n     */","meta":{"range":[13900,14100],"filename":"db.js","lineno":537,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100001061","name":"delProp","type":"FunctionExpression"},"vars":{"this.modified":"<anonymous>~Nsdb#delProp#modified"}},"description":"Delete selected prop inside given key","examples":["var db = nethserver.getDatabase('configuration');\ndb.delProp('OrganizationContact','City');"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"},{"type":{"names":["String"]},"description":"Property name","name":"prop"}],"returns":[{"type":{"names":["Object"]},"description":"the DB object itself"}],"name":"delProp","longname":"<anonymous>~Nsdb#delProp","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#delProp"},{"comment":"/**\n     * Delete selected props inside the given keys\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * db.delProp('OrganizationContact',['City','Street']);\n     *\n     * @param {String} key - Key name\n     * @param {Array} props - List of property names to be removed\n     * @return {Object} the DB object itself\n     */","meta":{"range":[14471,14604],"filename":"db.js","lineno":557,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100001095","name":"delProps","type":"FunctionExpression"},"vars":{"p":"<anonymous>~Nsdb#delProps~p"}},"description":"Delete selected props inside the given keys","examples":["var db = nethserver.getDatabase('configuration');\ndb.delProp('OrganizationContact',['City','Street']);"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"},{"type":{"names":["Array"]},"description":"List of property names to be removed","name":"props"}],"returns":[{"type":{"names":["Object"]},"description":"the DB object itself"}],"name":"delProps","longname":"<anonymous>~Nsdb#delProps","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#delProps"},{"comment":"/**\n     * Return the given key\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   var muid = db.get('MinUid');\n     * });\n     *\n     * @param {String} key - Key name\n     * @return {String} the type of the given key or empty string if key does not exist\n     */","meta":{"range":[8783,8843],"filename":"db.js","lineno":363,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100000815","name":"get","type":"FunctionExpression"}},"description":"Return the given key","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  var muid = db.get('MinUid');\n});"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"}],"returns":[{"type":{"names":["String"]},"description":"the type of the given key or empty string if key does not exist"}],"name":"get","longname":"<anonymous>~Nsdb#get","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#get"},{"comment":"/**\n     * Return the object corresponding to the given key\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   console.log(db.getObject('OrganizationContact'));\n     * });\n     * //Output:\n     * {\n     *   key: 'OrganizationContact',\n     *   type: 'configuration',\n     *   ...\n     *   Company: 'Example Org',\n     *   CountryCode: '',\n     *   ...\n     * }\n     *\n     * @param {String} key - Key name\n     * @return {Object.<Record>} an object which represents the record, throws a NotFound error if the key is not inside the db.\n     * Valid objects must have **key** and **type** fields, also each property is mapped on a field with\n     * the same name of the property itself.\n     *\n     */","meta":{"range":[5896,6493],"filename":"db.js","lineno":264,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100000628","name":"getObject","type":"FunctionExpression"},"vars":{"ret":"<anonymous>~Nsdb#getObject~ret","type":"<anonymous>~Nsdb#getObject~type","ret.key":"<anonymous>~Nsdb#getObject~ret.key","ret.type":"<anonymous>~Nsdb#getObject~ret.type","props":"<anonymous>~Nsdb#getObject~props","p":"<anonymous>~Nsdb#getObject~p","ret[undefined]":"<anonymous>~Nsdb#getObject~ret.undefined]"}},"description":"Return the object corresponding to the given key","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  console.log(db.getObject('OrganizationContact'));\n});\n//Output:\n{\n  key: 'OrganizationContact',\n  type: 'configuration',\n  ...\n  Company: 'Example Org',\n  CountryCode: '',\n  ...\n}"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"}],"returns":[{"type":{"names":["Object.<Record>"]},"description":"an object which represents the record, throws a NotFound error if the key is not inside the db.\nValid objects must have **key** and **type** fields, also each property is mapped on a field with\nthe same name of the property itself."}],"name":"getObject","longname":"<anonymous>~Nsdb#getObject","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#getObject"},{"comment":"/**\n     * Return the selected prop of given key\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   var city = db.getProp('OrganizationContact', 'City');\n     * });\n     *\n     * @param {String} key - Key name\n     * @param {String} prop - Property name\n     * @return {String} the prop value or empty string if key or prop does not exist\n     */","meta":{"range":[9821,10004],"filename":"db.js","lineno":399,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100000847","name":"getProp","type":"FunctionExpression"}},"description":"Return the selected prop of given key","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  var city = db.getProp('OrganizationContact', 'City');\n});"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"},{"type":{"names":["String"]},"description":"Property name","name":"prop"}],"returns":[{"type":{"names":["String"]},"description":"the prop value or empty string if key or prop does not exist"}],"name":"getProp","longname":"<anonymous>~Nsdb#getProp","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#getProp"},{"comment":"/**\n     * Return the properties of the given key\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   console.log(db.getProps('OrganizationContact'));\n     * });\n     * //Output:\n     * {\n     *   ...\n     *   Company: 'Example Org',\n     *   CountryCode: '',\n     *   ...\n     * }\n     *\n     * @param {String} key - Key name\n     * @return {Object.<Record>} an object which represent all the properties of the record, an empty object if the key is not inside the db.\n     * Each property is mapped on a field with the same name of the property itself.\n     *\n     */","meta":{"range":[8168,8428],"filename":"db.js","lineno":340,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100000768","name":"getProps","type":"FunctionExpression"},"vars":{"props":"<anonymous>~Nsdb#getProps~props","type":"<anonymous>~Nsdb#getProps~type","k":"<anonymous>~Nsdb#getProps~k","props[undefined]":"<anonymous>~Nsdb#getProps~props.undefined]"}},"description":"Return the properties of the given key","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  console.log(db.getProps('OrganizationContact'));\n});\n//Output:\n{\n  ...\n  Company: 'Example Org',\n  CountryCode: '',\n  ...\n}"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"}],"returns":[{"type":{"names":["Object.<Record>"]},"description":"an object which represent all the properties of the record, an empty object if the key is not inside the db.\nEach property is mapped on a field with the same name of the property itself."}],"name":"getProps","longname":"<anonymous>~Nsdb#getProps","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#getProps"},{"comment":"/**\n     * Return the type of given key\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   var type = db.getType('OrganizationContact'); //return \"configuration\"\n     * });\n     *\n     * @param {String} key - Key name\n     * @return {String} the type of the given key or empty string if key does not exist\n     */","meta":{"range":[9248,9383],"filename":"db.js","lineno":379,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100000825","name":"getType","type":"FunctionExpression"}},"description":"Return the type of given key","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  var type = db.getType('OrganizationContact'); //return \"configuration\"\n});"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"}],"returns":[{"type":{"names":["String"]},"description":"the type of the given key or empty string if key does not exist"}],"name":"getType","longname":"<anonymous>~Nsdb#getType","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#getType"},{"comment":"/**\n     * Return a list of keys inside the current DB\n     *\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * var keys = db.keys();\n     *\n     * @return {Array} the keys in DB\n     */","meta":{"range":[14839,14902],"filename":"db.js","lineno":574,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100001115","name":"keys","type":"FunctionExpression"}},"description":"Return a list of keys inside the current DB","examples":["var db = nethserver.getDatabase('configuration');\nvar keys = db.keys();"],"returns":[{"type":{"names":["Array"]},"description":"the keys in DB"}],"name":"keys","longname":"<anonymous>~Nsdb#keys","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#keys"},{"comment":"/**\n     * Open the database\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   // do something like db.getProp(...)\n     * })\n     *\n     * @return {Promise}\n     */","meta":{"range":[15160,15769],"filename":"db.js","lineno":589,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100001126","name":"open","type":"FunctionExpression"},"vars":{"self":"<anonymous>~Nsdb#open~self","fh":"<anonymous>~Nsdb#open~fh","closeFile":"<anonymous>~Nsdb#open~closeFile","p":"<anonymous>~Nsdb#open~p","":null}},"description":"Open the database","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  // do something like db.getProp(...)\n})"],"returns":[{"type":{"names":["Promise"]}}],"name":"open","longname":"<anonymous>~Nsdb#open","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#open"},{"comment":"/**\n     * Commit changes to the database\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   // do setProp\n     *   return db.save();\n     * }).then(function(){\n     *   // execute signal event\n     * });\n     *\n     * @return {Promise}\n     */","meta":{"range":[16105,16806],"filename":"db.js","lineno":628,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100001208","name":"save","type":"FunctionExpression"},"vars":{"self":"<anonymous>~Nsdb#save~self","fh":"<anonymous>~Nsdb#save~fh","":null}},"description":"Commit changes to the database","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  // do setProp\n  return db.save();\n}).then(function(){\n  // execute signal event\n});"],"returns":[{"type":{"names":["Promise"]}}],"name":"save","longname":"<anonymous>~Nsdb#save","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#save"},{"comment":"/**\n     * Create a key if not exists, or ad edit an existing one.\n     * Set key type and the value of selected props inside the given key\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   db.set('OrganizationContact', 'configuration', {Street: \"my street\", City: \"Bigapple\"});\n     *   return db.save();\n     * }).then(function(){\n     *   return nethserver.signalEvent('organization-save');\n     * });\n     *\n     *\n     * @param {String} key - Key name\n     * @param {String} type - Type of the key\n     * @param {Object} props - Object with properties map name => value\n     * @return {Object} the DB object itself\n     */","meta":{"range":[10724,10852],"filename":"db.js","lineno":425,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100000883","name":"set","type":"FunctionExpression"}},"description":"Create a key if not exists, or ad edit an existing one.\nSet key type and the value of selected props inside the given key","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  db.set('OrganizationContact', 'configuration', {Street: \"my street\", City: \"Bigapple\"});\n  return db.save();\n}).then(function(){\n  return nethserver.signalEvent('organization-save');\n});"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"},{"type":{"names":["String"]},"description":"Type of the key","name":"type"},{"type":{"names":["Object"]},"description":"Object with properties map name => value","name":"props"}],"returns":[{"type":{"names":["Object"]},"description":"the DB object itself"}],"name":"set","longname":"<anonymous>~Nsdb#set","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#set"},{"comment":"/**\n     * Save and object inside the db.\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   db.setProp({key: 'OrganizationContact', type: 'configuration', Company: 'Example Org', CountryCode: ''});\n     * });\n     * //Output:\n     * {\n     *   key: 'OrganizationContact',\n     *   type: 'configuration',\n     *   ...\n     *   Company: 'Example Org',\n     *   CountryCode: '',\n     *   ...\n     * }\n     *\n     * @param {Object.<Record>} obj - Object to be saved. The object must contains at least **key** and **type** fields\n     * @return {Object.<Record>} on success the DB itself, or undefined on error\n     *\n     */","meta":{"range":[7206,7509],"filename":"db.js","lineno":309,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100000710","name":"setObject","type":"FunctionExpression"},"vars":{"tmp":"<anonymous>~Nsdb#setObject~tmp"}},"description":"Save and object inside the db.","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  db.setProp({key: 'OrganizationContact', type: 'configuration', Company: 'Example Org', CountryCode: ''});\n});\n//Output:\n{\n  key: 'OrganizationContact',\n  type: 'configuration',\n  ...\n  Company: 'Example Org',\n  CountryCode: '',\n  ...\n}"],"params":[{"type":{"names":["Object.<Record>"]},"description":"Object to be saved. The object must contains at least **key** and **type** fields","name":"obj"}],"returns":[{"type":{"names":["Object.<Record>"]},"description":"on success the DB itself, or undefined on error"}],"name":"setObject","longname":"<anonymous>~Nsdb#setObject","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#setObject"},{"comment":"/**\n     * Set the value of selected prop inside the given key.\n     * Key type is not changed.\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   db.setProp('OrganizationContact', 'Street', 'my street');\n     *   return db.save();\n     * }).then(function(){\n     *   return nethserver.signalEvent('organization-save');\n     * });\n     *\n     *\n     * @param {String} key - Key name\n     * @param {String} prop - Property name\n     * @param {String} value - Value of the property\n     * @return {Object} the DB object itself\n     */","meta":{"range":[12163,12379],"filename":"db.js","lineno":475,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100000968","name":"setProp","type":"FunctionExpression"},"vars":{"this.modified":"<anonymous>~Nsdb#setProp#modified","this.data[undefined][undefined][undefined]":"<anonymous>~Nsdb#setProp#data[undefined][undefined][undefined]"}},"description":"Set the value of selected prop inside the given key.\nKey type is not changed.","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  db.setProp('OrganizationContact', 'Street', 'my street');\n  return db.save();\n}).then(function(){\n  return nethserver.signalEvent('organization-save');\n});"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"},{"type":{"names":["String"]},"description":"Property name","name":"prop"},{"type":{"names":["String"]},"description":"Value of the property","name":"value"}],"returns":[{"type":{"names":["Object"]},"description":"the DB object itself"}],"name":"setProp","longname":"<anonymous>~Nsdb#setProp","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#setProp"},{"comment":"/**\n     * Set the value of selected props inside the giben key\n     * Key type is not changed.\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   db.setProps('OrganizationContact', {Street: \"my street\", City: \"Bigapple\"});\n     *   return db.save();\n     * }).then(function(){\n     *   return nethserver.signalEvent('organization-save');\n     * });\n     *\n     * @param {String} key - Key name\n     * @param {Object} props - Object with properties map name => value\n     * @return {Object} the DB object itself\n     */","meta":{"range":[12990,13196],"filename":"db.js","lineno":501,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100001006","name":"setProps","type":"FunctionExpression"},"vars":{"this.modified":"<anonymous>~Nsdb#setProps#modified"}},"description":"Set the value of selected props inside the giben key\nKey type is not changed.","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  db.setProps('OrganizationContact', {Street: \"my street\", City: \"Bigapple\"});\n  return db.save();\n}).then(function(){\n  return nethserver.signalEvent('organization-save');\n});"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"},{"type":{"names":["Object"]},"description":"Object with properties map name => value","name":"props"}],"returns":[{"type":{"names":["Object"]},"description":"the DB object itself"}],"name":"setProps","longname":"<anonymous>~Nsdb#setProps","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#setProps"},{"comment":"/**\n     * Set the type of given key\n     *\n     * @example\n     * var db = nethserver.getDatabase('configuration');\n     * return db.open().then(function() {\n     *   db.set('MinUid', \"5000\");\n     *   return db.save();\n     * });\n     *\n     * @param {String} key - Key name\n     * @param {String} type - Type of the key\n     * @return {Object} the DB object itself\n     */","meta":{"range":[11239,11539],"filename":"db.js","lineno":445,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{"id":"astnode100000905","name":"setType","type":"FunctionExpression"},"vars":{"this.modified":"<anonymous>~Nsdb#setType#modified","this.data[undefined]":"<anonymous>~Nsdb#setType#data[undefined]","this.data[undefined][undefined]":"<anonymous>~Nsdb#setType#data[undefined][undefined]"}},"description":"Set the type of given key","examples":["var db = nethserver.getDatabase('configuration');\nreturn db.open().then(function() {\n  db.set('MinUid', \"5000\");\n  return db.save();\n});"],"params":[{"type":{"names":["String"]},"description":"Key name","name":"key"},{"type":{"names":["String"]},"description":"Type of the key","name":"type"}],"returns":[{"type":{"names":["Object"]},"description":"the DB object itself"}],"name":"setType","longname":"<anonymous>~Nsdb#setType","kind":"function","memberof":"<anonymous>~Nsdb","scope":"instance","$longname":"Nsdb#setType"},{"comment":"/**\n     * Represents a localised error condition and optionally the reason of it,\n     * if depends on the user input\n     *\n     * @typedef {Object} NsError\n     * @param {integer} id - Unique identifier used to find the code which generated the error and to troubleshoot the problem\n     * @param {string} type - Describes the type of the error\n     * @param {Object} [attributes] - Each property of the object is associated to an input attribute. The corresponding value is the localised failure reason, caused by the attribute\n     * @param {string} [message] - Generic, localised, end-user oriented description of the error\n     * @param {string} [originalMessage] - Textual error message from a remote procedure that further describes the error cause\n     * @param {Object} [detail] - A custom object. It is useful to pass it to the error handler procedure\n     * @see {@link #nethserver.Error}\n     */","meta":{"filename":"error.js","lineno":23,"columnno":4,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"Represents a localised error condition and optionally the reason of it,\nif depends on the user input","kind":"typedef","name":"NsError","type":{"names":["Object"]},"params":[{"type":{"names":["integer"]},"description":"Unique identifier used to find the code which generated the error and to troubleshoot the problem","name":"id"},{"type":{"names":["string"]},"description":"Describes the type of the error","name":"type"},{"type":{"names":["Object"]},"optional":true,"description":"Each property of the object is associated to an input attribute. The corresponding value is the localised failure reason, caused by the attribute","name":"attributes"},{"type":{"names":["string"]},"optional":true,"description":"Generic, localised, end-user oriented description of the error","name":"message"},{"type":{"names":["string"]},"optional":true,"description":"Textual error message from a remote procedure that further describes the error cause","name":"originalMessage"},{"type":{"names":["Object"]},"optional":true,"description":"A custom object. It is useful to pass it to the error handler procedure","name":"detail"}],"see":["{@link #nethserver.Error}"],"longname":"NsError","scope":"global","$longname":"NsError"},{"comment":"/**\n * An object of type TaskCompleted is attached to a CustomEvent as \"detail\"\n *\n * @typedef {Object} TaskCompleted\n * @param {String} unitName the systemd unit name where the event was run\n * @param {Number} exitCode exit code of the signal-event command\n * @param {Number} mainPid the process PID number\n */","meta":{"filename":"event.js","lineno":31,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"An object of type TaskCompleted is attached to a CustomEvent as \"detail\"","kind":"typedef","name":"TaskCompleted","type":{"names":["Object"]},"params":[{"type":{"names":["String"]},"description":"the systemd unit name where the event was run","name":"unitName"},{"type":{"names":["Number"]},"description":"exit code of the signal-event command","name":"exitCode"},{"type":{"names":["Number"]},"description":"the process PID number","name":"mainPid"}],"longname":"TaskCompleted","scope":"global","$longname":"TaskCompleted"},{"comment":"/**\n * An object of type TaskProgress is attached to a CustomEvent as \"detail\"\n *\n * @typedef {Object} TaskProgress\n * @param {String} unitName the systemd unit name where the event was run\n * @param {Number} progress A number between 0 and 1 (percent of task completion)\n * @param {String} title The title of the running task\n * @param {String} message Last message emitted by the task\n */","meta":{"filename":"event.js","lineno":40,"columnno":0,"path":"/home/davidep/nethserver/nethserver-cockpit/api/core","code":{}},"description":"An object of type TaskProgress is attached to a CustomEvent as \"detail\"","kind":"typedef","name":"TaskProgress","type":{"names":["Object"]},"params":[{"type":{"names":["String"]},"description":"the systemd unit name where the event was run","name":"unitName"},{"type":{"names":["Number"]},"description":"A number between 0 and 1 (percent of task completion)","name":"progress"},{"type":{"names":["String"]},"description":"The title of the running task","name":"title"},{"type":{"names":["String"]},"description":"Last message emitted by the task","name":"message"}],"longname":"TaskProgress","scope":"global","$longname":"TaskProgress"}],"symbols":["CertificateDetail","CertificateMeta","CertificatePayload","CustomEvent","DateSettings","EventListener","LetsEncryptRequest","nethserver.applications.getApplication","nethserver.applications.getApplications","nethserver.Error","nethserver.EventMonitor","nethserver.eventMonitor","nethserver.EventMonitor.addEventListener","nethserver.EventMonitor.wait","nethserver.getDatabase","nethserver.notificationMonitor","nethserver.notificationMonitor.addEventListener","nethserver.notificationMonitor.dispatchEvent","nethserver.signalEvent","nethserver.system.certificates.generateSelfSignedCertificate","nethserver.system.certificates.getAllCertificates","nethserver.system.certificates.getLetsEncryptCertificateParameters","nethserver.system.certificates.getSelfSignedCertificateParameters","nethserver.system.certificates.requestLetsEncryptCertificate","nethserver.system.certificates.selectDefaultCertificate","nethserver.system.certificates.showCertificate","nethserver.system.certificates.uploadCertificate","nethserver.system.date.getDate","nethserver.system.date.getTimeZones","nethserver.system.date.setDate","nethserver.system.disks.getJSONUsage","nethserver.system.disks.getUpdatedUsage","nethserver.system.disks.updateJSONUsage","nethserver.system.dns.addAlias","nethserver.system.dns.addRemoteHost","nethserver.system.dns.deleteAlias","nethserver.system.dns.deleteRemoteHost","nethserver.system.dns.editAlias","nethserver.system.dns.editRemoteHost","nethserver.system.dns.getAlias","nethserver.system.dns.getAllAliases","nethserver.system.dns.getAllRemoteHosts","nethserver.system.dns.getDNS","nethserver.system.dns.getRemoteHost","nethserver.system.dns.setAliases","nethserver.system.dns.setDNS","nethserver.system.hostname.getDomainName","nethserver.system.hostname.getFQDN","nethserver.system.hostname.getSystemName","nethserver.system.hostname.setFQDN","nethserver.system.organization.getInfo","nethserver.system.organization.saveInfo","nethserver.system.power.poweroff","nethserver.system.power.reboot","nethserver.system.provider","nethserver.system.provider.bindRemoteLdap","nethserver.system.provider.getAdDefault","nethserver.system.provider.getInfo","nethserver.system.provider.installLocalAd","nethserver.system.provider.installLocalLdap","nethserver.system.provider.joinDomain","nethserver.system.provider.probeAd","nethserver.system.provider.probeLdap","nethserver.system.provider.uninstall","nethserver.system.services.disableService","nethserver.system.services.enableService","nethserver.system.services.getAllServices","nethserver.system.services.restartService","nethserver.system.services.startService","nethserver.system.services.stopService","nethserver.system.summary.getHostname","nethserver.system.summary.setHostname","nethserver.system.users.addGroup","nethserver.system.users.addUser","nethserver.system.users.deleteGroup","nethserver.system.users.deleteUser","nethserver.system.users.editGroup","nethserver.system.users.getGroupMembers","nethserver.system.users.getGroups","nethserver.system.users.getUser","nethserver.system.users.getUserMembership","nethserver.system.users.getUsers","nethserver.system.users.mkpasswd","nethserver.validate","nethserver.validateAll","Notification","Nsdb","Nsdb#delete","Nsdb#delProp","Nsdb#delProps","Nsdb#get","Nsdb#getObject","Nsdb#getProp","Nsdb#getProps","Nsdb#getType","Nsdb#keys","Nsdb#open","Nsdb#save","Nsdb#set","Nsdb#setObject","Nsdb#setProp","Nsdb#setProps","Nsdb#setType","NsError","TaskCompleted","TaskProgress"]}},"app":{"title":"NethServer Cockpit","routing":{"method":"path","caseSensitive":true},"base":"/nethserver-cockpit/","entrance":"content:readme","meta":null,"server":"static"},"template":{"name":"Docma Default Template","version":"1.7.0","author":"Onur Yıldırım (onur@cutepilot.com)","license":"MIT","main":"index.html","options":{"sidebar":true,"collapsed":false,"badges":true,"outline":"flat","symbolMeta":false,"search":true,"navbar":true,"navItems":[{"iconClass":"ico-embed","label":"Home","href":"./"},{"iconClass":"ico-book","label":"Building Docs","items":[{"label":"Dev environment","href":"./environment"},{"separator":true},{"label":"API guidelines","href":"./api_guidelines"},{"label":"UI guidelines","href":"./ui_guidelines"},{"label":"Application manifest","href":"./application_manifest"},{"separator":true},{"label":"API reference","href":"./api"},{"separator":true},{"label":"Build RPM","href":"./build_rpm"},{"label":"Build documentation","href":"./build_doc"}]},{"iconClass":"ico-mouse-pointer","label":"Manuals","items":[{"label":"Developer manual","href":"http://docs.nethserver.org/projects/nethserver-devel","target":"_blank"},{"label":"Administrator manual","href":"http://docs.nethserver.org","target":"_blank"},{"separator":true},{"label":"Cockpit Guide","href":"http://cockpit-project.org/guide/latest/","target":"_blank"}]},{"iconClass":"ico-md ico-github","label":"GitHub","href":"https://github.com/NethServer/nethserver-cockpit","target":"_blank"}],"title":""}},"_":{"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","logsEnabled":false}};
!function(){var e={};e.createChild=function(e,t,n){n=n||{};var o=document.createElement(t||"div");return Object.keys(n).forEach(function(e){o[e]=n[e]}),e.appendChild(o),o},e.getDocmaElem=function(){var t=document.getElementById(docma._.elementID);return t||(t=e.createChild(document.body,"div",{id:docma._.elementID})),t},e.getContentElem=function(){var e=document.getElementById(docma._.contentElementID);if(!e)throw new Error("Partial "+docma._.partials.content+' should have an element with id="'+docma._.contentElementID+'".');return e},e.loadCompiledContent=function(t){e.getDocmaElem().innerHTML=t},e.loadContent=function(t){e.getContentElem().innerHTML=t,e.scrollTo()},e.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var o=document.documentElement;return{top:n.top+window.pageYOffset-o.clientTop,left:n.left+window.pageXOffset-o.clientLeft}}}},e.scrollTo=function(t){if(!(t=(t||window.location.hash||"").replace(/^#/,"")))return void(document.body.scrollTop=0);var n=document.getElementById(t);n&&(document.body.scrollTop=e.getOffset(n).top)},e.fixAnchors=function(){docma.app.base&&setTimeout(function(){var e,t,n=document.querySelectorAll('a[href^="#"]');for(e=0;e<n.length;e++){t=n[e];var o=t.getAttribute("href");"#"===o.slice(0,1)&&o.length>1&&(o=window.location.pathname+(window.location.search||"")+o,t.setAttribute("href",o))}},50)},docma.dom=Object.freeze(e)}();
!function(){dust.filters=dust.filters||{},dust.filters.$pt=function(t){return docma.utils.parseTicks(t)},dust.filters.$pnl=function(t){return docma.utils.parseNewLines(t,{keepIfSingle:!0})},dust.filters.$pl=function(t){return docma.utils.parseLinks(t)},dust.filters.$tl=function(t){return docma.utils.trimLeft(t)},dust.filters.$p=function(t){return docma.utils.parse(t,{keepIfSingle:!0})},dust.filters.$nt=function(t){return docma.utils.normalizeTabs(t)},dust.filters.$desc=function(t){return docma.utils.parse(t.classdesc||t.description||"")},dust.filters.$def=function(t){return t.optional?String(t.defaultvalue):""};var t=/true|false|null|undefined|Infinity|NaN|\d+|Number\.\w+|Math\.(PI|E|LN(2|10)|LOG(2|10)E|SQRT(1_)?2)|\[.*?]|\{.*?}|new [a-zA-Z]+.*|\/.+\/[gmiu]*|Date\.(now\(\)|UTC\(.*)|window|document/;dust.filters.$val=function(e){var n=docma.utils.notate(e,"meta.code.value");if(void 0===n)return"";if("string"!=typeof n)return n;var i=docma.utils.notate(e,"type.names")||[];return!/['"`]/.test(n.slice(0,1))&&i.indexOf("String")>=0&&(1===i.length||-1===t.indexOf(n))?'"'+n+'"':n},dust.filters.$id=function(t){var e;if("string"==typeof t)e=t;else{e=(docma.utils.isConstructor(t)?"new-":"")+t.$longname}return e.replace(/ /g,"-")}}();
!function(){function o(o,e,n){return e?(o&&"/"!==e.slice(0,1)&&(e="/"+e),n&&"/"!==e.slice(-1)&&(e+="/"),e):o||n?"/":""}function e(o,e){e=void 0===e?window.location.search||"":e,"?"===e.slice(0,1)&&(e=e.slice(1)),o=o.replace(/[\[\]]/g,"\\$&");var n=new RegExp("&?"+o+"(=([^&#]*)|&|#|$)"),a=n.exec(e);return a&&a[2]?decodeURIComponent(a[2].replace(/\+/g," ")):""}Object.defineProperty(docma,"location",{configurable:!1,get:function(){var n=o(!0,window.location.pathname,!0),a=o(!0,docma.app.base,!0),c=n;return n.slice(0,a.length)===a&&(c=n.slice(a.length-1,n.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:o(!0,docma.app.entrance,!1),base:a,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:n,pathname:c,path:c+(window.location.search||""),getQuery:e}}}),docma.location=Object.freeze(docma.location)}();
!function(){function e(e){return e&&""!==e.trim()?e:null}function n(e){return(e||"").replace(/([^>]+>)?~?(.*)/,"$2")}function t(e){return e}var r={};r.notate=function(e,n){if("object"==typeof e){var t,i=Array.isArray(n)?n:n.split("."),a=i[0];if(a)return t=e[a],i.length>1?(i.shift(),r.notate(t,i)):t}},r.getName=function(e){if(e.alias){var t=n(r.notate(e,"meta.code.name")||"");if(t)return t.replace(/.*?[#.~:](\w+)$/i,"$1")}return e.name},r.getLongName=function(e){var t=n(e.longname);if(e.alias){var i=n(r.notate(e,"meta.code.name")||"");if(!i)return t;var a=n(e.memberof||"");if(!a)return i;var o=new RegExp("^"+a+"[#\\.~:]"),s="instance"===e.scope?"#":".";return o.test(i)?i:a+s+i}return t},r.getFullName=r.getLongName,r.getCodeName=function(e){return n(r.notate(e,"meta.code.name")||"")||r.getLongName(e)},r.getSymbolByName=function(e,n){var t,i;for(t=0;t<e.length;t++){if(i=e[t],i.name===n||i.longname===n||r.getFullName(i)===n)return i;if(i.$members){var a=r.getSymbolByName(i.$members,n);if(a)return a}}return null},r.isDeprecated=function(e){return e.deprecated},r.isGlobal=function(e){return"global"===e.scope},r.isNamespace=function(e){return"namespace"===e.kind},r.isModule=function(e){return"module"===e.kind},r.isClass=function(e){return!r.isConstructor(e)&&("class"===e.kind||"ClassDeclaration"===r.notate(e,"meta.code.type"))},r.isConstructor=function(e){return"class"===e.kind&&"MethodDefinition"===r.notate(e,"meta.code.type")},r.isStaticMember=function(e){return"static"===e.scope},r.isStatic=r.isStaticMember,r.isInner=function(e){return"inner"===e.scope},r.isInstanceMember=function(e){return"instance"===e.scope},r.isMethod=function(e){var n=r.notate(e,"meta.code.type");return"function"===e.kind||"MethodDefinition"===n||"FunctionExpression"===n},r.isFunction=r.isMethod,r.isInstanceMethod=function(e){return r.isInstanceMember(e)&&r.isMethod(e)},r.isStaticMethod=function(e){return r.isStaticMember(e)&&r.isMethod(e)},r.isProperty=function(e){return"member"===e.kind},r.isInstanceProperty=function(e){return r.isInstanceMember(e)&&r.isProperty(e)},r.isStaticProperty=function(e){return r.isStaticMember(e)&&r.isProperty(e)},r.isTypeDef=function(e){return"typedef"===e.kind},r.isCustomType=r.isTypeDef,r.isEnum=function(e){return e.isEnum},r.isReadOnly=function(e){return e.readonly},r.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},r.isPrivate=function(e){return"private"===e.access},r.isProtected=function(e){return"protected"===e.access},r.isUndocumented=function(e){return!e.comments},r.hasDescription=function(n){return Boolean(e(n.classdesc)||e(n.description))},r.getTypes=function(e){if("class"===e.kind)return"class";var n=r.notate(e,"type.names")||[];return n=n.map(function(e){return e.replace(/\.</g,"<")}).join("|"),e.isEnum?"enum<"+n+">":n},r.getReturnTypes=function(e){var n=e.returns;if(!Array.isArray(n))return"void";var t,i=n.reduce(function(e,n){return t=r.notate(n,"type.names"),Array.isArray(t)?e.concat(t):e},[]);return i.length>0?i.join("|"):"void"},r.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},r.parseTicks=function(e){return e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,n,t){return r.normalizeTabs(r._wrapEscapeCode(t,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,n,t){return r._wrapEscapeCode(t)})},r.parseNewLines=function(e,n){return n=n||{},r._tokenize(e,function(e,t){if(t)return e;var r=e.split(/\n{2,}/);return r.length<=1&&n.keepIfSingle?e:r.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},r.parseLinks=function(e,n){n=n||{};var t=/\{@link +([^}]*?)\}/g,i=e.replace(t,function(e,t){var r,i,a=t.split("|");return 1===a.length?r=i=a[0].trim():(r=a[0].trim(),i=a[1].trim()),'<a href="'+r+'"'+(n.target?' target="'+n.target+'"':"")+">"+i+"</a>"});return r.parseTicks(i)},r.parse=function(e,n){return n=n||{},e=r.trimLeft(e),e=r.parseNewLines(e,n),e=r.parseTicks(e),r.parseLinks(e,n)},r.normalizeTabs=function(e){var n=e.match(/^\s*/gm),t=1/0;if(n.forEach(function(e,n){e=e.replace(/\t/g,"  "),n>0&&(t=Math.min(e.length,t))}),t!==1/0){var r=new RegExp("^\\s{"+t+"}","g");e=e.replace(r,"")}e=e.replace(/^\s*/,"");var i;return e.replace(/(\n+)(\s+)/gm,function(e,n,t){return i=t.replace(/\t/g,"  "),i=new Array(i.length-i.length%2+1).join(" "),n+i})},r.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var n=r.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return r.isConstructor(e)&&(n+=" constructor"),r.isMethod(e)&&(n+=" method"),r.isProperty(e)&&(n+=" property"),n.replace(/[><"'`\n\r]/g,"").toLowerCase()},r.getCodeFileInfo=function(e){return{filename:r.notate(e,"meta.filename"),lineno:r.notate(e,"meta.lineno"),path:r.notate(e,"meta.path")}},r.listType=function(e){return e.map(function(e){return r._wrapEscapeCode(e)}).join(", ")},r.listTypeDesc=function(e){if(!e||0===e.length)return"";var n,t=e.map(function(e){return n=r.parse(e.description||"",{keepIfSingle:!0}),n&&(n="&nbsp;&nbsp;—&nbsp;&nbsp;"+n),r._wrapEscapeCode(e.type.names.join("|"))+n});return t.length>1?"<ul>\n"+t.join("</li>\n<li>")+"\n</ul>":t},r._find=function(e,n){if(!e||!n)return null;var t,r,i=null;for(t=0;t<e.length;t++)if((r=e[t])&&"object"==typeof r){for(var a in n)if(void 0!==n[a]&&n.hasOwnProperty(a)){if(n[a]!==r[a]){i=null;break}i=r}if(i)break}return i},r._assign=function(e,n,t){e=e||{};var r;for(r in n)n.hasOwnProperty(r)&&(t?Object.defineProperty(e,r,{enumerable:!0,value:n[r]}):e[r]=n[r]);return e},r._values=function(e){if(Array.isArray(e))return e;var n,t=[];for(n in e)e.hasOwnProperty(n)&&t.push(e[n]);return t},r._wrapEscapeCode=function(e,n){return e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;"),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e},r._tokenize=function(e,n){"function"!=typeof n&&(n=t);if(e.indexOf("```")<0)return[n(e,!1)];var r,i="```".length,a="",o="",s=[],u=!1;for(r=0;r<e.length;r++)a+=e[r],o+=e[r],a.length>i&&(a=a.slice(-i)),"```"===a&&(u=!u,u?(s.push(n(o.slice(0,-i),!1)),o=a):(s.push(n(o,!0)),o=""));return s},docma.utils=r}();
!function(){function t(t,e){l.info("Event:",t,e?e[0]:""),y.trigger(t,e)}function e(t,n){if(n&&!(u.indexOf(n)<0)){if(t)docma.app.routing.caseSensitive||(t=t.toLowerCase());else{if(n!==e.Type.API)return;t=f}var o=p._find(docma.routes,{type:n,name:t});o&&p._assign(this,o)}}function n(t,e){dust.render(t,docma,function(t,n){if(t)throw t;m.loadCompiledContent(n),"function"==typeof e&&e()})}function o(){t(docma.Event.Render,[docma.currentRoute]),d&&(t(docma.Event.Ready),d=!1)}function r(o,r){docma._.currentRoute=e.create(null),n(docma._.partials.notFound,function(){if(t(docma.Event.Render,[null]),m.scrollTo(),"function"==typeof r)return r(404);throw new Error("Page or content not found for route: "+JSON.stringify(o))})}function a(){if(s){var t=sessionStorage.getItem("redirectPath")||null;if(t)return sessionStorage.removeItem("redirectPath"),l.info("Redirecting to:",t),page.redirect(t),!0}return!1}function i(t){var e=t||window.location.search;return/^[?&]/.test(e)&&(e=e.slice(1)),e||null}var c,u,d=!1,s="path"===docma.app.routing.method,f="_def_",p=docma.utils,m=docma.dom,l={};["log","info","warn","error"].forEach(function(t){!function(){l[t]=function(){docma._.logsEnabled&&console[t].apply(console,arguments)}}()}),docma.addFilter=function(t,e){if(docma.filterExists(t))throw new Error('Filter "'+t+'" already exists.');return dust.filters[t]=e,docma},docma.removeFilter=function(t){return delete dust.filters[t],docma},docma.filterExists=function(t){return"function"==typeof dust.filters[t]};var y=new EventEmitter;docma.Event={Ready:"ready",Render:"render",Route:"route"},docma.on=function(t,e){return y.on.apply(y,arguments),docma},docma.once=function(){return y.once.apply(y,arguments),docma},docma.off=function(){return y.off.apply(y,arguments),docma},docma.addListener=docma.on,docma.addListenerOnce=docma.once,docma.removeListener=docma.off,Object.defineProperty(docma,"currentRoute",{configurable:!1,get:function(){return docma._.currentRoute}}),Object.defineProperty(docma,"documentation",{configurable:!1,get:function(){return docma._.documentation}}),Object.defineProperty(docma,"symbols",{configurable:!1,get:function(){return docma._.symbols}}),e.Type={API:"api",CONTENT:"content"},u=p._values(e.Type),e.prototype.exists=function(){return Boolean(this.id)},e.prototype.isEqualTo=function(t){return!!(t&&t.exists()&&this.exists())&&t.path===this.path},e.prototype.isCurrent=function(){return this.isEqualTo(docma.currentRoute)},e.prototype.apply=function(){return this.type===e.Type.API?(docma._.documentation=docma.apis[this.name].documentation,docma._.symbols=docma.apis[this.name].symbols):(docma._.documentation=null,docma._.symbols=null),t(docma.Event.Route,[this]),docma.render(this),this},e.prototype.toString=function(){return JSON.stringify(this)},e.create=function(t,n){return new e(t,n)},e.fromID=function(t){if("string"!=typeof t)return l.warn("Route ID is not a string: "+t),new e(null);var n=t.split(":");return new e(n[1],n[0])},e.fromQuery=function(t){if(!t)return new e(null);var n=t.split("&")[0].split("="),o=n[0].toLowerCase();return new e(n[1],o)},Object.defineProperty(docma,"Route",{configurable:!1,get:function(){return e}}),docma.fetch=function(t,e){var n=new XMLHttpRequest;n.onreadystatechange=function(){if(4===n.readyState){var o=200===n.status?n.responseText:"";return l.log("XHR GET:",n.status,t),e(n.status,o)}},n.open("GET",t,!0),n.send()},docma.render=function(t,a){if(!t||!t.exists())return r(t,a);if(!t.isEqualTo(docma.currentRoute)){docma._.currentRoute=t;var i="function"==typeof a;t.type===e.Type.API?n(docma._.partials.api,function(){o(),i&&a(200),m.fixAnchors(),m.scrollTo()}):docma.fetch(t.contentPath,function(e,c){if(404===e)return r(t,a);n(docma._.partials.content,function(){m.loadContent(c),o(),i&&a(e),m.fixAnchors()})})}},docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),s&&(page("(/)?api/:apiName?",function(t,n){var o=t.params.apiName||f,r=e.create(o,e.Type.API);if(!r||!r.exists())return n();r.apply()}),page("(/)?:content",function(t,n){var o=t.params.content,r=e.create(o,e.Type.CONTENT);if(!r||!r.exists())return n();r.apply()})),page("(/)?",function(t,n){a()||setTimeout(function(){var o,r=i(t.querystring);if(s){if(r)return n();o=c}else l.log("Query-string:",r),o=r?e.fromQuery(r):c;if(!o||!o.exists())return n();o.isCurrent()||o.apply()},100)}),page("*",function(t){l.warn("Unknown Route:",t.path),e.create(null).apply()}),l.info("Docma SPA Configuration:"),l.info("App Title:          ",docma.app.title),l.info("Routing Method:     ",docma.app.routing.method),l.info("App Server:         ",docma.app.server),l.info("Base Path:          ",docma.app.base),l.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){d=!0,c=e.fromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),l.info("Docma SPA loaded!")}}();
docma = Object.freeze(docma);